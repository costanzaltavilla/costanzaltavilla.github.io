<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on ReactOS Website</title>
    <link>https://costanzaltavilla.github.io/blogs/</link>
    <description>Recent content in Blogs on ReactOS Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://costanzaltavilla.github.io/blogs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GSoC 2018 - Final report</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-2018-final-report/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-2018-final-report/</guid>
      <description>Introduction WinBtrfs is a feature-complete IFSD (Installable File System Driver) for NT operating systems, written by Mark Harmstone. This driver is checked into the ReactOS source code for some time already. My main goal for this GSoC project was to implement all missing features (and fix bugs, of course) in ReactOS that prevents booting from BTRFS file system.
Links All work is merged into gsoc2018_all branch in my ReactOS fork on GitHub.</description>
    </item>
    
    <item>
      <title>GSoC 2018 - booting from BTRFS works!</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-2018-booting-btrfs-works/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-2018-booting-btrfs-works/</guid>
      <description>Hi, all!
Here is what happened since last post:
Freeloader is now able to read files and follow symlinks from btrfs partition. One major issue is left here - case sensitivity. BTRFS is case-sensitive file system, so paths like /ReactOS/System32, /reactos/system32, /ReactOS/system32 are different here. But in Windows world most software is written assuming that case does not matter during path lookup. This thing is solved in WinBtrfs driver, but for Freeloader it can be a bit tricky.</description>
    </item>
    
    <item>
      <title>GSoC 2018 - boot sector finished</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-2018-boot-sector-finished/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-2018-boot-sector-finished/</guid>
      <description>Hi all!
 Sorry, haven’t written anything for a while. Let me tell you what have been done since last post. BTRFS boot sector TL;DR: It works!
 I’ve been able to load main bootloader code from freeldr.sys into memory, transfer control to it and get on error message (freeldr.sys can’t find its config file - I haven’t written second-stage BTRFS code yet).  It was not that easy because we are in x86 real mode when running boot sector thus only about 1mb of memory is available.</description>
    </item>
    
    <item>
      <title>GSoC 2018 weeks 3-4 - understanding BTRFS internals</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-2018-weeks-3-4-understanding-btrfs-internals/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-2018-weeks-3-4-understanding-btrfs-internals/</guid>
      <description>Hi all!
This two weeks I was diving into btrfs structures and on-disk layout. Writing an ASM program from scratch is not that simple so I decided to convert a VirtualBox image with BTRFS filesystem in it to raw file and write a python script to parse and show internal filesystem structures.  It was also useful for understanding how files are stored in FS, because information on btrfs.wiki.kernel.org was not enough for me to understand some corner cases.</description>
    </item>
    
    <item>
      <title>GSoC 2018 - Project BTRFS Boot</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-2018-weeks-1-2/</link>
      <pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-2018-weeks-1-2/</guid>
      <description>Introduction Hi all!
My name is Victor Perevertkin and I am the only GSoC student in ReactOS project this year :)
This is my first GSoC and I was very excited when I realized that I was selected and there will be four mentors for me. I will definitely learn a lot from this internship!
My project is both simple and complicated. I want to add to ReactOS an option to install on and boot from BTRFS partitions.</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 - Work Summary</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-work-summary/</link>
      <pubDate>Tue, 29 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-work-summary/</guid>
      <description>This is a detailed summary of the work I&#39;ve performed over the course of Google Summer of Code 2017. This was a continuation of my GSoC project from last year.
Code Submitted You can check out my branch with SVN at https://svn.reactos.org/reactos/branches/GSoC_2016/NTFS
You can find a list of commits made to my branch during GSoC 2017 at this link.
I also worked on this project after GSoC last year and before the coding period officially began this year.</description>
    </item>
    
    <item>
      <title>RAPPS Enchancements: GSoC 2017 Edition Final Report</title>
      <link>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-final-report/</link>
      <pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-final-report/</guid>
      <description>Introduction ReactOS App Manager (RAPPS) is an app used in ReactOS to download apps, tested by ReactOS team and community. It also manages apps that are installed - you can view apps that are present on your system and uninstall them. The goal of this project was to improve RAPPS and add some very useful features.
Here is a video presenting it&#39;s features:


Quick Links  SVN branch link Unified diff as a Gist Commits Overview  Table of contents  Introduction Building Testing Changes made during development  Application List Improvements Bulk installing Script installation Other improvements   Future work Conclusions   Building Building RAPPS is no different as building parts of ReactOS.</description>
    </item>
    
    <item>
      <title>GSoC’17 : Project Taskbar Shell Extensions for ReactOS | Final Report</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc17-project-taskbar-shell-extensions-reactos-final-report/</link>
      <pubDate>Sun, 27 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc17-project-taskbar-shell-extensions-reactos-final-report/</guid>
      <description>Hello, everyone! It&amp;rsquo;s me, Shriraj (a.k.a sr13).
The time has come to summarize all the work I have done in this Summer of Code with ReactOS and complete this journey of my first ever GSoC, though my story with ReactOS is just beginning!
TL;DR of Project Taskbar Shell Extensions: # Designed &amp;amp; Implemented the Quick Launch Toolbar for ReactOS. # Designed &amp;amp; Added support for Battery Status in notification area (System Tray).</description>
    </item>
    
    <item>
      <title>GSoC xHCI: Final Submission</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-xhci-final-submission/</link>
      <pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-xhci-final-submission/</guid>
      <description>Links: Link to my work:https://svn.reactos.org/svn/reactos/branches/GSoC_2017/usbxhci/reactos/drivers/usb/usbxhci/
Link to check out using svn:https://svn.reactos.org/reactos/branches/GSoC_2017/usbxhci/reactos/
All the commits log:https://svn.reactos.org/svn/reactos/branches/GSoC_2017/usbxhci/?view=log
https://code.reactos.org/changelog/~br=GSoC_2017/reactos/branches/GSoC_2017/usbxhci?max=30&amp;amp;view=fe
Introduction: My aim is to develop driver for xHCI which is compatible with ReactOS. For the development I&amp;rsquo;ve used Windows 2003 server edition running on Vmware Workstation. The first link points to the folder in which all main code and header files are present. To view any file, click on it and in the log; against any revision, click on view/download to see the code.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 11 : Last but not the least...</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-11-last-not-least/</link>
      <pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-11-last-not-least/</guid>
      <description>Hello, everyone! 0/
As you can see in the title, this is officially the last week of coding but not the least as we still have a week left until final evaluation period ends. As we are coming close towards the end of GSoC, you all might feel sad as I won&#39;t be able to share about my work anymore... :`( But hold your hankies, fellas, GSoC might end soon but my journey with ReactOS is just beginning.</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 Update 10</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-10/</link>
      <pubDate>Sat, 19 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-10/</guid>
      <description>Home stretch! Just a matter of days before Google opens up the GSoC final submission! I&#39;ll be using every minute I have available to me in the interim.
Splitting A B-Tree Node Have I finally finished my magnum opus, allowing for file creation without limits on the number of files? Well, the bad news is, no, I still have more work to do on this. The good news, however, is I have this working in ReactOS!</description>
    </item>
    
    <item>
      <title>GSoC xHCI: PCS and CCS</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-xhci-pcs-and-ccs/</link>
      <pubDate>Thu, 17 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-xhci-pcs-and-ccs/</guid>
      <description>Finally the driver is generating multiple interrupt without any issues. Whenever a device is connected or disconnected an interrupt is being generated. In windows 2003 server edition, when a device is attached windows is recognizing that some unknown device is attached and also in the device manager we can see attached devices though they are not initiated.

This is a crucial step, as now any USB device can be safely initiated.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 10</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-10/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-10/</guid>
      <description>Hi, everyone! 0/
Tick-Tock is coming to an end, and the next week is perhaps the last week of coding before final evaluation starts! ;P But let&#39;s be calm and discuss what happened last week. And as promised, I managed to get some demonstrable snaps this time. So, here we go!
As told in my last blog, we got some flashy new icons for the stobject modules I worked on. The above pic shows the battery in charging mode.</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 Update 9</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-9/</link>
      <pubDate>Sat, 12 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-9/</guid>
      <description>Last week went pretty well! :)
In my last post, I talked about how I needed to refactor some code to fix a bug. I&#39;m really happy with how this turned out.
Refactoring As I mentioned before, the driver has a struct called an NTFS_ATTR_CONTEXT which keeps track of information related to attributes. The main purpose of the structure is to keep vital information about the attribute cached in memory, but it&#39;s also just a convenient way to pass information about attributes between functions and the driver relies on it quite extensively.</description>
    </item>
    
    <item>
      <title>xHCI : A life lesson learnt</title>
      <link>https://costanzaltavilla.github.io/blogs/xhci-life-lesson-learnt/</link>
      <pubDate>Mon, 07 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/xhci-life-lesson-learnt/</guid>
      <description>Recently I’ve worked on Scratchpad allocation. Scratchpad buffers are PAGESIZE blocks of system memory which the xHCI uses to store its internal state. xHCI can request 0 to 1024 buffers. Number of buffers required is given in the HCSPARAMS1 register. Each buffer is a PAGESIZE block aligned to PAGESIZE boundary.

Scratchpad buffer array is an array which contains addresses of the scratchpad buffers. Its size is equal to the number of maximum scratchpad buffers required by the hardware.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 9</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-9/</link>
      <pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-9/</guid>
      <description>Hey there, its Shriraj here! 0/
We are already in week 9 of this 12-week journey of GSoC! Soon about to take the final lap, but wait we have a lot to do before that. This time too I don&#39;t have any pics as such to show visible progress, but yeah let&#39;s see through words what I managed to do last week. ;P
What I did Last week? As I told in my last blog, we are currently working to find the appropriate enumeration filters required for safely removable devices, but as that feature is being tested on a standalone console app, I was free to prepare the stobject of ReactOS to welcome the hotplug!</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 Update 8</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-8/</link>
      <pubDate>Thu, 03 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-8/</guid>
      <description>Hello World!
I know it hasn&#39;t been very long since the last update. The last few updates were late, but I&#39;m trying to get back into good habits like committing often and blogging on time. :)
Last time, I talked about how ReactOS was corrupting my test volume by trying to create files I wasn&#39;t ready for it to create. I was indeed able to fix that by booting into Windows and creating the folder and files ReactOS kept trying to make.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 8 : Phase 3</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-8-phase-3/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-8-phase-3/</guid>
      <description>Hey there! 0/
Sorry for posting my blog late this time :P. Was kinda busy with my family duties, besides some errands. Also, my college is starting from this week. As devs, we are better coders than writers but yeah, as a GSoC norm, blogging is a healthy habit which keeps us updated. ;)
About this phase Let&#39;s keep it short this time, as I told in my last blog we are officially in the final phase of the project.</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 Update 7</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-7/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-7/</guid>
      <description>Hi everyone! Last week I left off with an example of creating files, showing you how an index node fills up with file names. Once the node in a B-Tree gets too full, it needs to be split. I&#39;ve been working on this for a while and I was expecting that I&#39;d have an example of this working. I even delayed writing this post because I was so sure this feature was almost ready.</description>
    </item>
    
    <item>
      <title>RAPPS Enchancements: GSoC 2017 Edition Volume 5</title>
      <link>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-volume-5/</link>
      <pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-volume-5/</guid>
      <description>It&#39;s very good when things go as planned. And they do! The BULK INSTALL&amp;nbsp;is here! Let&#39;s have a look.

 Checkboxes are useful Now you can select a bunch of apps in the app bar. In the statusbar you can see selected app count. Selection drops when the categories are switched.
&amp;nbsp;Using &#34;Select/Deselect button&#34; will select all apps in the current view.
&amp;nbsp;Install all apps at once Pressing &#34;Install&#34; while there is a checkbox selection will open a download dialog.</description>
    </item>
    
    <item>
      <title>GSoC xHCI status update</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-xhci-status-update-0/</link>
      <pubDate>Fri, 28 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-xhci-status-update-0/</guid>
      <description>In this post I’m going to detail my work progress. In the past week I’ve decided to clean up the code. Some parts of the code was re-written as functions. After that I’ve started working on the USB port status function. When an interrupt is generated the code is getting stuck in a loop.  I’m trying to figure out what caused it.

As we’ve discussed in the previous blog post.</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 Update 6</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-6/</link>
      <pubDate>Mon, 24 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-6/</guid>
      <description>Hello again! :)
Last week, I finished the code that writes a B-Tree node to disk. Specifically, it lets me write the node to an index buffer within the index allocation of the parent directory. Don&#39;t worry if that doesn&#39;t make sense, I&#39;ll explain it more below.
From a user&#39;s perspective, this means that the driver now has the ability to create dozens of files. My tester will create 39 files before filling the index node.</description>
    </item>
    
    <item>
      <title>RAPPS Enchancements: GSoC 2017 Edition Volume 3 and 4</title>
      <link>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-volume-3-and-4/</link>
      <pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-volume-3-and-4/</guid>
      <description>Whoosh! Two weeks flew by in no time! Fortunately, I&#39;ve done many things and have some screenshots to show!
Before we start, I have an anouncement: I&#39;m going to Hackfest and FroSCon this August! I may not be very useful there, but I can discuss things related to the project, meet my mentor Mark Jansen and other devs. I will also learn from the ReactOS developers and FrOSCon workshops. &amp;nbsp;</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 7</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-7/</link>
      <pubDate>Thu, 20 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-7/</guid>
      <description>Hello World!! ;D
If you had read my last blog then you already know that we are in &#34;Phase 2&#34;. And whats exciting is this phase zoomed past at such a speed that in the upcoming week I am starting &#34;Phase 3&#34;. (Spoiler Alert! XP) But, let us hold our horses and let me describe what happened in Phase 2. For a TL;DR you can just check the Task 2.X in the Milestones page.</description>
    </item>
    
    <item>
      <title>XHCI Ring Data Structures </title>
      <link>https://costanzaltavilla.github.io/blogs/xhci-ring-data-structures/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/xhci-ring-data-structures/</guid>
      <description>xHC functioning mostly depends on different ring data structures. In this blog post I’m going to detail what a ring is in XHCI and various implementations by Linux and Haiku. 
A ring is a circular queue of data structures. There are three kinds of rings in xHC. 
1.	Command ring
2.	Event Ring
3.	Transfer Ring

These rings are the basis of communication with the Controller. Command Ring is used to send commands to the controller.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 6 : Phase 2</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-6-phase-2/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-6-phase-2/</guid>
      <description>Hey, guys!
Six weeks have passed since I started my journey of coding with ReactOS. It was a wonderful time full of learning, coding, and fun. In terms of productivity, this week was not that great as compared to weeks before. But I can say it was an essential decision making and learning week. So I started this week, by resuming the task of patching up the remaining issues of CR-122.</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 Update 5</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-5/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-5/</guid>
      <description>Last week I got back to writing B-Tree code. Sadly, the week flew by before I could come up with anything screenshot-able.

I&#39;ve been updating the B-Tree code to accommodate index allocations, and trees of arbitrary depth. I&#39;m mostly done with this but I still have to finish the code that saves an index buffer to the index allocation. Once I do that, I should be able to demonstrate creating dozens of files in a directory.</description>
    </item>
    
    <item>
      <title>GSoC: USBxHCI driver development work status</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-usbxhci-driver-development-work-status/</link>
      <pubDate>Thu, 13 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-usbxhci-driver-development-work-status/</guid>
      <description>Welcome to my third blog post.  Sorry for the missed blog post from last week. I was stuck over an issue which kept me occupied. With the help of community I finally got over it. I had to calculate an address by adding a value taken from another register to the base address. This led to a typecast issue. Due to huge number of steps required to generate interrupt I didn&#39;t suspect the problem to be where it is initially.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 5</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-5/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-5/</guid>
      <description>Hey there! 0/
Last time you must have seen some snapshots of where the QuickLaunch has reached. Seeing the UI and some functionalities in the snaps must have given you a feeling that it&#39;s complete and finished. But, Nah... a lot of work is left, besides debugging so that Dr. Watson would finally be free of his postmortems!! XP
Coming straight to the point, this week the best thing was about &#39;Code Reviews&#39;.</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 Update 4</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-4/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-4/</guid>
      <description>I won&#39;t lie; it&#39;s been a slow week, feature-wise.
I guess you could say that last week was all about finding and fixing bugs and errors with the driver. During the first half of the week, I upgraded my automated tester to test file creation, and I fixed a couple of bugs it turned up. I used the second half of the week for addressing issues raised by CR-123.
Automated Test I tried to go all out with the tester.</description>
    </item>
    
    <item>
      <title>RAPPS Enchancements: GSoC 2017 Edition Volume 2.1</title>
      <link>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-volume-21/</link>
      <pubDate>Thu, 06 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-volume-21/</guid>
      <description>You may wonder why this post is not labeled &#34;Volume 3&#34;. Well, thanks to the training week of the military dept. of our university this week wasn&#39;t very productive in terms of features. Nevertheless, this short post is here to keep you updated.
This week I was working on refactoring the code and improving code. This will help me progress faster and addd new feature more easily. It is not the only reason: RAPPS was initially written in C and had been converted to C++.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 4</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-4/</link>
      <pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-4/</guid>
      <description>Hi, everyone!! So you all are still with me? Good!! ;)
As I had told last week, that this week will be rather an exciting one, and yes it indeed was. And the reason is, finally, you all will see a working (prototype) of the quick launch band. (yay!!) Let me go through chronologically, what I did this week. The first thing was to Implement the IShellFolderBand. This is a very important interface as it helps to initialize the IShellFolder and PIDL (via its InitializeSFB method) required to enumerate the folder objects.</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 Update 3</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-3/</link>
      <pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-3/</guid>
      <description>All continues to go well :). Two weeks ago, I started writing code to parse B-Trees, which are representative of how NTFS organizes its directories on disk.
It works like this: First, the index of a directory is read and converted to a B-Tree in memory. Next, a key for the new file is inserted into the tree. Finally, the tree is converted back to an index root attribute which is written to disk.</description>
    </item>
    
    <item>
      <title>RAPPS Enchancements: GSoC 2017 Edition Volume 2</title>
      <link>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-volume-2-2/</link>
      <pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-volume-2-2/</guid>
      <description>Another week - another update! This time I worked on the license info, update checking and other improvements to my work. These changes bring up many under-the-hood changes.
Dont worry, these changes may not look huge. I&#39;m adding features and then worry about the visuals :)&amp;nbsp; But first things first. Let&#39;s have a look.

Before  After  &amp;nbsp;
Update check RAPPS can now suggest and update if the version installed is less than in the database.</description>
    </item>
    
    <item>
      <title>xHC Operational Model Overview</title>
      <link>https://costanzaltavilla.github.io/blogs/xhc-operational-model-overview/</link>
      <pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/xhc-operational-model-overview/</guid>
      <description>In this post I’m going to give some details on the working of xHC along with my progress. In my opinion Driver development is for the most part thoroughly studying the documentation. I’m working towards my next major target i.e., Implementing Control transfer. In this process I’ve faced some unforeseen issues. From the previous USB models and the available driver code my estimates of xHC turned out to be inadequate. xHC uses various kinds or data structures, more than what the other HC’s use.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 3</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-3/</link>
      <pubDate>Mon, 26 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-3/</guid>
      <description>Hey there! Great to see you all in my 4th blogpost of this series. ;)
So far, so good!! No blockers and nothing to worry about, and just being around reactos community is pure fun. Coming straight to the point, this week I continued what I had left last time and that was the james band... err.. i mean CISFBand!! XP
After forwarding the methods of the built in system CISFBand and testing its integrity within live virtual machine, the next thing to do was to replace this system CISFBand with my own implementation of it.</description>
    </item>
    
    <item>
      <title>RAPPS Enchancements: GSoC 2017 Edition</title>
      <link>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-0/</link>
      <pubDate>Sat, 24 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/rapps-enchancements-gsoc-2017-edition-0/</guid>
      <description>Introduction My name is Alexander Shaposhnikov, i&#39;m a GSOC student from Ukraine working on ReactOS App Manager (RAPPS) project. Last two weeks was extrodinary hard - university work took all the time. Fortunately it was dealt with and I&#39;m working at full capacity. I don&#39;t like to write stories in the blog so I&#39;ll keep this blog short and informative. And with screenshots!
Changes During this 3 weeks I&#39;ve made some changes to visual part and to the RAPPS DB.</description>
    </item>
    
    <item>
      <title>GSoC NTFS 2017 Update 2</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-2/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-2/</guid>
      <description>All is going well :). Since the last update, I&#39;ve checked off a minor TODO related to file creation: increasing the size of the master file table, if needed.

Every time the mft grows, it creates several empty file records at a time. In the past, I was using this to my advantage, and was only creating files in empty slots that already existed. Every time I got an error saying there wasn&#39;t enough space for a new file, I&#39;d boot into Windows, create a file (which would increase the mft size), and get back to testing.</description>
    </item>
    
    <item>
      <title>Interrupt mechanism: eHCI vs xHCI</title>
      <link>https://costanzaltavilla.github.io/blogs/interrupt-mechanism-ehci-vs-xhci/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/interrupt-mechanism-ehci-vs-xhci/</guid>
      <description>This blog post is first one of a series of posts which will deal with various topics related to xHCI (usb 3.0). I&#39;m Rama Teja one of the participants in GSOC 2017. My project is to develop xHCI driver for ReactOS with the help of my mentor Thomas Faber. In the xHCI documentation given by Intel there are three major topics i.e., Register Interface, Data Structures and Operational model. The hardware controller&#39;s register interface is used to send commands to it or get the status etc.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 2</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-2/</link>
      <pubDate>Tue, 20 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-2/</guid>
      <description>Hello friends, its Shriraj again. ;)
Its already second week of the coding period, and I was enjoying my time as a beginner dev in reactos. Learning new things every now and then and just being on irc is a sheer fun. So as decided last time, we had an official gsoc meeting on #reactos-gsoc. I explained and summarized what I was able to do last week. Also planned what Ill be doing next.</description>
    </item>
    
    <item>
      <title>GSOC Project TSE Week 1</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-1/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-project-tse-week-1/</guid>
      <description>Hi, its me Shriraj. :)
This is my second blog on my GSoC project TSE(Taskbar Shell Extension).
So, finally coding period began, and I was excited enough to pump out some code boiling within my mind! Sir Giannis (aka gadamopoulos) and Sir Sylvain (aka sdever) are my mentors in this project. In this first week, basically mentor Giannis showed me how to step into this huge codebase of reactos and helped me to get started by providing the canvas for my code.</description>
    </item>
    
    <item>
      <title>GSoC NTFS  2017 Update 1</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-1/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-ntfs-2017-update-1/</guid>
      <description>Hello everyone! My name is Trevor Thompson. I&#39;m a computer science major at Blue Ridge Community College living in Virginia. This is my second time participating in Google Summer of Code. I&#39;m very happy to be working on ReactOS&#39; NTFS driver again!
Recap When I started last year, ReactOS could read files from an NTFS volume, but had no write support whatsoever. After GSoC last year, the driver in my branch could overwrite existing files.</description>
    </item>
    
    <item>
      <title>My first ever GSOC!!</title>
      <link>https://costanzaltavilla.github.io/blogs/my-first-ever-gsoc/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/my-first-ever-gsoc/</guid>
      <description>#Introduction: Hi, I am shriraj (aka sr13), currently pursuing my B.Tech in CSE (Computer Science and Engineering) @ National Institute of Technology Goa, India. I am not just studying CSE but I like to play and experiment with CSE. Programming is just another hobby and I knew that its one of my forte the moment I had felt my first &#39;Hello World!!&#39; with &#39;C&#39;. (OK, that might be a little exaggeration XD, but yeah you can tell it when you start enjoying the subject so much that you felt code is better art than a poem.</description>
    </item>
    
    <item>
      <title>Word 2010 support Part 6: New progress</title>
      <link>https://costanzaltavilla.github.io/blogs/word-2010-support-part-6-new-progress/</link>
      <pubDate>Mon, 27 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/word-2010-support-part-6-new-progress/</guid>
      <description>Hello everyone, I&#39;m summarizing here my latest progress towards making Word 2010 running in ReactOS.  After having paused a little my ReactOS development during the first two weeks of February (due to personal matters), I started reviewing Samuel Serapión&#39;s NTLM code (in the &#34;sspi-bringup&#34; branch) and first focused on trying to convert his NTLM tests into something that can be included into our apitest framework. This is still work-in-progress because his original tests are interactive, and I need to find the good way of turning them into automated tests and finding a way to store the test results (for comparison purposes), as the tests are modeled around a client/server architecture.</description>
    </item>
    
    <item>
      <title>Word 2010 support Part 5: NTLM &amp; FOSDEM 2017 preparation</title>
      <link>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part5-ntlm-fosdem-2017-preparation/</link>
      <pubDate>Mon, 30 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part5-ntlm-fosdem-2017-preparation/</guid>
      <description>Hello everyone! As you&#39;ve seen my activity in the blogs has been reduced quite a lot since beginning January,so here is a summary of what I did during the month of January.
First two weeks of January (until ~= 15)  In my previous report of last time, I explained that what blocked my progress on Word 2010 was the absence of NTLM authentication support for the installation to continue &amp; finish.</description>
    </item>
    
    <item>
      <title>Word 2010 support – Weekly report - Part 4: Update &#43; Authentication failed!</title>
      <link>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part4-update-authentication-failed/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part4-update-authentication-failed/</guid>
      <description>Hi everyone, let me first wish you a happy new year 2017!
 During the second half of last month (December) I did not have much time to work on ReactOS, hence the fact I could not write more reports for you to read. I was however able to test some stuff I started to work on during last November. I have started to familiarize and play a bit with the user-profile APIs inside userenv.</description>
    </item>
    
    <item>
      <title>Word 2010 support – Weekly report – Part 3: Installation progress</title>
      <link>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part3-installation-cont/</link>
      <pubDate>Tue, 06 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part3-installation-cont/</guid>
      <description>Hello everybody. Today I am going to summarize my progress on Word 2010 installation so far, concerning the main two problems I did encounter: setting a correct environment block for services, and understanding why the SLInitialize function fails, leading to the failure of the Word 2010 installation. The third problem, namely correctly stopping services, will be addressed in a subsequent report. Reading the two previous weekly reports: &#34;Part 1: Installation&#34;</description>
    </item>
    
    <item>
      <title>Word 2010 support – Weekly report – Part 2: Installation (cont.)</title>
      <link>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part2-installation-cont/</link>
      <pubDate>Sun, 20 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part2-installation-cont/</guid>
      <description>In this second report I continue my investigations on the Word 2010 installation. Last time we saw that our services (and in particular the &#34;Office Software Protection Platform&#34; OSPPSVC service) were started without a complete environment block, and as a result some needed environment variables were missing, causing e.g. OSPPSVC to fail opening some of its files. We now analyse what happens after my local fix (NOTE: I have not committed the fix yet, as I validate it in my local installation first).</description>
    </item>
    
    <item>
      <title>Word 2010 support – Weekly report – Part 1: Installation</title>
      <link>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part1-installation/</link>
      <pubDate>Sat, 19 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/word-2010-support-weekly-report-part1-installation/</guid>
      <description>Hello everyone, I am Hermès Bélusca-Maïto. This is my first week report, as part of the part-time scholarship that I started two weeks ago, that consists in making ReactOS being able to support Word 2010.  Preliminaries  Before starting anything with Word 2010 I needed to prepare a testing environment. Because I am a native Windows user, I use a ReactOS trunk build made with the MSVC compiler. This ReactOS build was then properly installed and adequately configured on a VirtualBox (VBox) virtual machine (VM).</description>
    </item>
    
    <item>
      <title>Google Summer of Code 2016 Conclusion</title>
      <link>https://costanzaltavilla.github.io/blogs/google-summer-code-2016-conclusion/</link>
      <pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-summer-code-2016-conclusion/</guid>
      <description>It&#39;s been a long but ultimately rewarding journey to the completion of Google Summer of Code 2016 for the ReactOS Project. As a project that seeks to implement an open source operating system based off of the NT architecture and compatible with both NT device drivers and Win32 applications, ReactOS faces some rather distinct challenges compared to other open source OS projects. With an emphasis on compatibility and familiarity, interest in the project has increased substantially after the major revamps the other family of NT operating systems has underwent over the past few years.</description>
    </item>
    
    <item>
      <title>Inside ReactOS Deutschland e.V.: Donations and how to automate them</title>
      <link>https://costanzaltavilla.github.io/blogs/inside-reactos-deutschland-ev-donations-and-how-automate-them/</link>
      <pubDate>Thu, 25 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/inside-reactos-deutschland-ev-donations-and-how-automate-them/</guid>
      <description>Hi all! This is my first blog post designed to shed some light on the foundation behind ReactOS.
Just like many other big Open-Source projects, ReactOS is backed by a foundation supporting the project financially and organizationally. I have been the treasurer of ReactOS Deutschland e.V. since its establishment in 2009 and as such, it has been my duty to do the tedious accounting of all donations. While most of that is happening in the background, you see the results from time to time when I update the public Donors page.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Conclusion</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-conclusion/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-conclusion/</guid>
      <description>My Google Summer of Code project proposal stated that I would add TCP support to the network branch of ReactOS, which sought to integrate lwIP 1.4.1 as the protocol level network driver for the operating system, to ultimately be tested by replacing the network driver in an installation of Windows Server 2003 with my driver. The full proposal can be found here. At the time of my proposal, I underestimated the amount of effort a fully working network driver would take.</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Work Summary</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-work-summary-draft/</link>
      <pubDate>Tue, 23 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-work-summary-draft/</guid>
      <description>This is a detailed summary of the work I&#39;ve performed during GSoC.
Highlights  Wrote numerous functions which allow for NTFS write-support. Expanded ReactOS&#39; NTFS driver with the ability to overwrite files and change a file&#39;s size. Identified and repaired several bugs related to reading files from NTFS. Fixed ReactOS&#39; LargeMCB implementation, facilitating support for four file systems, NTFS included (See CORE-11002). Diagnosed and fixed a regression using log files (See CORE-11707).</description>
    </item>
    
    <item>
      <title>GSoC final report for USB project.</title>
      <link>https://costanzaltavilla.github.io/blogs/gsoc-final-report-usb-project-0/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/gsoc-final-report-usb-project-0/</guid>
      <description>Here is my final blog post in terms of GSoC, but definitely not the last one in terms of contribution to ReactOS. I’ll try to share conclusion of my work done during this summer.
&amp;nbsp;
First of all links &amp;nbsp;
Here are the links to GIT and SVN repositories containing my commits. These repos are identical, so for review or fork you can choose the one that is more eligible for you.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 13</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-13/</link>
      <pubDate>Mon, 22 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-13/</guid>
      <description>In this final week, I tried to do as much as possible to get my driver to some sort of usable state for simple network C programs.&amp;nbsp;
My first task this week was to fix a problem with port freeing. When a TCP connection dies, its lwIP PCB would sometimes remain, preventing new sockets from binding to the ports they are taking up. After a lot of tracing, I discovered that an lwIP internal semantic was at play.</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Week 12</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-12/</link>
      <pubDate>Thu, 18 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-12/</guid>
      <description>I said in my last update that I was aware GSoC was coming to an end, but in truth I don&#39;t think I realized just how close the end was coming. I need to be completely finished in much less than a week from now!
Near the middle of the week, I was mostly finished with the code to create a new file record in memory. This progressed quickly, thanks to the time I put into diagnostic output and researching the file records that Windows creates.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 12</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-12/</link>
      <pubDate>Mon, 15 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-12/</guid>
      <description>In week 10, I had completed a major rewrite of my driver. In week 11, I dove into the problem of lwIP not being thread-safe once again. While I was able to deal with most of the individual bugs that kept popping up, each one was taking me more time to solve due to the haphazard nature of my previous fixes. At the beginning of last week, it was quickly becoming more apparent that I would need to rework most of my code once again if I wanted to have any hope of circumventing the multithreeading issue once and for all.</description>
    </item>
    
    <item>
      <title>Controlling (not just) Ctrl&#43;C</title>
      <link>https://costanzaltavilla.github.io/blogs/controlling-not-just-ctrlc/</link>
      <pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/controlling-not-just-ctrlc/</guid>
      <description>Probably one of the funniest moments while developing is when you realize that something that &#34;looks easy&#34; is not as straight forward as it seemed at first sight.
The task was &#34;really easy&#34;: Just creating a console app which (1)loops infinitely, (2)doing some tasks and (3) which breaks when the user decides to stop it (4)printing some valuable info before exiting.
&#34;Naaah, this is easy. I just need a while/for/do-while/whatever infinite loop, a printf message asking the user to press a specific key to stop it, then a getch() to capture the key in order to break/stop the loop, and finally another printf to print the valuable info: PROFIT!</description>
    </item>
    
    <item>
      <title>USB stack improvements GSoC - Week 11</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-11/</link>
      <pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-11/</guid>
      <description>I spent last week moving from 2k3 to ROS. After doing final validation of my usbhub changes on 2k3, me and my mentor decided to move to some real world issues. I have setup my development and testing environment work with ROS instead of 2k3.
VS-2015 as IDE for ROS First of all, I decided to use VS as IDE, to be able to use windbg as debugger. In that case I’ll have minimal changes on workflow I was using on 2k3 before.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 11</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-11/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-11/</guid>
      <description>This past week, I have primarily focused on thread-safety.&amp;nbsp;
Three weeks ago, I discovered that lwIP&#39;s core code is not thread-safe. When left unmodified, each lwIP thread will access several unprotected global linked lists as well as use a set of global variables to process any and all incoming packets. One option to solve this problem was to modify the core code so the global data was protected from concurrent access.</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Weeks 9, 10, 11</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-weeks-9-10-11/</link>
      <pubDate>Fri, 05 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-weeks-9-10-11/</guid>
      <description>Wow, these weeks keep blazing by! Apologies for the missed updates; I&#39;ve been faced with a family emergency for the past couple of weeks. My girlfriend&#39;s dad was in the hospital for 13 days after having a heart attack, getting a triple-bypass, then suffering from Ogilvie syndrome after surgery. He got out Saturday and is recovering. It&#39;s been a very long, scary time for my girlfriend and her family and she needed my support full-time.</description>
    </item>
    
    <item>
      <title>USB stack improvements GSoC - Week 10</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-10/</link>
      <pubDate>Tue, 02 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-10/</guid>
      <description>Since previous post I have done few tasks and learned a lot of things. Generally, I was reading and thinking about WDM’s PnP handling concepts. In general, I’ve improved my understanding of PnP and also learned about remove synchronization. Also I’ve investigated some corner cases and problems of WDM related remove synchronization topic. I think this learning is definitely a big investment into my future as NT driver developer.
Interesting thing with DV’s Enhanced I/O Verification Here I have faced few issues which was not seen without Enhanced I/O Verification flag set.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 10</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-10/</link>
      <pubDate>Mon, 01 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-10/</guid>
      <description>Having rewritten all of the functions that I implemented and modified some of the functions that already existed before I started on this project at the end of last week, I now had to start flushing all of the bugs that invariably exist after a rewrite.&amp;nbsp;
The major issue I dealt with this past week revolved around properly handling a TDI_LISTEN.&amp;nbsp;
Part of the purpose for the rewrite was to reorganize my data so each TCP_CONTEXT struct represented a user socket or connection endpoint, and each ADDRESS_FILE struct only represented a local network address.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 9</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-9/</link>
      <pubDate>Mon, 25 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-9/</guid>
      <description>Last week ended with my realization that lwIP was not thread-safe, and me reading up on various ways to get around that.&amp;nbsp;
Last weekend, I spent a lot of time tinkering with lwIP&#39;s core code to see how hard it would be to make it thread-safe. I ultimately failed to actually make the library thread-safe, but I did learn a lot of things about lwIP that I hadn&#39;t known before I started digging into the source code in so much depth.</description>
    </item>
    
    <item>
      <title>SATA AHCI Driver GSoC - Update</title>
      <link>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-update/</link>
      <pubDate>Mon, 25 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-update/</guid>
      <description>Links
 Short Brief Driver Testing Why no blog? Known Issues  Short Brief
Supported Features:
 Device Adapter Detection Non-Fatal Error Handling Adapter Srb PNP Request SCSIOP_INQUIRY : Device Inquiry SCSIOP_REPORT_LUNS : Report LUN SCSIOP_READ_CAPACITY : Device Geometry SCSIOP_TEST_UNIT_READY SCSIOP_READ : Device Read Request  UnSupported Features:
 Fatal Error Handling SCSIOP_MODE_SENSE SCSIOP_WRITE NCQ : Native Command Queuing Cache and Priority Requests  Driver Testing
Platform: Virtual Machine (Vmware)</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Week 8</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-8/</link>
      <pubDate>Tue, 19 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-8/</guid>
      <description>Overwriting Files Continues This week has been pretty uneventful. I wrote a function to shrink the allocation size of an attribute and another to migrate a resident attribute to non-resident. The former seems to be working, the latter still needs some work. Looking Forward (Changing Direction) I&#39;m only planning to spend another couple of days working on updating files, then I want to move on to file creation. There are several reasons motivating this thinking.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 8</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-8/</link>
      <pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-8/</guid>
      <description>This past week started with me mindlessly chasing down memory bugs after having gotten WinDBG up and running. A particularly annoying bug involved an lwIP protocol control block being dereferenced by lwIP after it had been freed. I could not find a place in my drivere where I tried to use a dead PCB pointer, so I looked deeper. I did some stepping through of code, and read more of lwIP&#39;s source code.</description>
    </item>
    
    <item>
      <title>USB stack improvements GSoC - Week 8</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-8/</link>
      <pubDate>Mon, 18 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-8/</guid>
      <description>I have spent this week on improvements of realization and done stability fixes in usbhub PDO/FDO. &amp;nbsp; I have prepared usbhub FDO&#39;s handling of removal and surprise-removal IRPs. We&#39;ll receive surprise-removal IRP on HUB unexpected removal, or on USB controller removal from PCI port. Here hub should &#34;let know&#34; all its children that their parent is removed and on next removal they also can be removed. For now this code path can&#39;t be tested because none of our host controllers can be removed now(they are failing query remove).</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Week 7</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-7/</link>
      <pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-7/</guid>
      <description>Assigning Clusters Part 2 I can&#39;t believe week seven has already passed! Adding assigned clusters to data runs turned out to be more challenging than I anticipated, but I made steady progress on it throughout the week and have it working now (as far as I can tell). Fixing the problems with LargeMcb.c in week 1 came full-circle, as I relied on a map control block to simplify my task considerably.</description>
    </item>
    
    <item>
      <title>USB stack improvements GSoC - Week 7</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-7/</link>
      <pubDate>Tue, 12 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-7/</guid>
      <description>I&#39;ll start this report from the good news. After starting GSoC&#39;s coding period, I was doing fixes and improvements of hub layer and was not repeating tests which was done by me in community bonding period (results provided in my first blog post). So by the end of this week I decided to test surprise-removal on VBox with 2k3 working with our USB stack. As result I saw that crashes on device removal (physical) are gone!</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 7</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-7/</link>
      <pubDate>Mon, 11 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-7/</guid>
      <description>Last week ended with Art going through decompiled assembly to find a bug for me, because the stack trace in the kernel debugger was pointing me to the wrong line in the C source code. It turns out that the problem was a NULL pointer dereference in the RECEIVE callback. As always in programming, a lot of effort went into catching a small oversight.&amp;nbsp;
With that leftover bug from last week resolved, I moved on to my tasks for this week - more debugging, a code review done by Thomas Faber, and finally setting up WinDBG.</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Week 6</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-6/</link>
      <pubDate>Wed, 06 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-6/</guid>
      <description>This week was rewarding, because I got some things done that I&amp;#39;ve been wanting to do for a while.
Assigning ClustersI wrote some code which can assign clusters by updating the $BITMAP file. As I mentioned last week, this is half of the equation for extending the allocation size of a non-resident file. I&amp;#39;m still working on the other half, which involves storing the assigned clusters in data runs.
Resident EvalI realized that modifying the data runs would involve making the same changes I needed for resident attributes, so I focused on making these changes during the second half of the week.</description>
    </item>
    
    <item>
      <title>USB stack improvements GSoC - Week 6</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-6/</link>
      <pubDate>Wed, 06 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-6/</guid>
      <description>This week I have continued fixes in PnP handling of our USB stack. I was focused on usbhub and done number of fixes there. Let me describe process from begining.
Issue on MS&#39;s hidusb removal. As you may remember from previous post, now MS&#39;s usbccgp works under 2k3, sitting on the top of our ohci-hub pair. But that time I have also faced issue on it&#39;s removal. So to simplify debugging I have reproduced same issue with hidusb and saw the same behaviour under 2k3.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 6</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-6/</link>
      <pubDate>Sun, 03 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-6/</guid>
      <description>I closed out last week by drawing a flow chart in preparation for restructuring my code for some new state variables. For most of this week, I was figuring out details about, and implementing, this chart.&amp;nbsp;
One of new state variable I added in is one variable in the CONNECTION_CONTEXT struct, specifying what that particular connection is doing. This way, my driver can easily identify a socket as bound or not, whether it is currently connected, and what operations it is trying to perform.</description>
    </item>
    
    <item>
      <title>SATA AHCI Driver GSoC - Week 5 Update</title>
      <link>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-5-update/</link>
      <pubDate>Wed, 29 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-5-update/</guid>
      <description>From beginning of week I started reading more stuffs (core) about AHCI and trying to plan a road map which I will follow after making first version of AHCI driver. Throughout the week I made some progress with Interrupt Handler and AHCI port programming. Though I have finished port programming routine and next I will complete Interrupt Handler followed by Srb functions.
Port programming is still untested (fingers crossed), because I can&#39;t test it without Interrupt Handler routine (I can, but It will not give 100% surety) looking forward to get these two routines tested in this week.</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Week 5</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-5/</link>
      <pubDate>Tue, 28 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-5/</guid>
      <description>Progress At the beginning of the week I finished cleaning up and committing the code I wrote related to extending a file&#39;s size. This took me a little longer than I expected and in the future I&#39;m going to commit more often so I don&#39;t have this problem.
From there I added support for truncating files, with a couple of caveats. This is significant because it allows for opening a file in Notepad.</description>
    </item>
    
    <item>
      <title>USB stack improvements GSoC - Week 5</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-5/</link>
      <pubDate>Mon, 27 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-stack-improvements-gsoc-week-5/</guid>
      <description>After long period of investigation and debugging, this week I have commited first patches for review. And they make difference under 2k3 :)
About fixes I&#39;ve done
As continuation of usbhub&#39;s PnP handler debug and testing, this week I have commited patches with fixes. The most important ones are described below (same description is given in commit messages too).
&amp;nbsp;PDO: Changed handling of IRP_MN_REMOVE_DEVICE On this IRP we should free recources and delete child&#39;s PDO ONLY if it isn&#39;t presented physically on the bus.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 5</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-5/</link>
      <pubDate>Sun, 26 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-5/</guid>
      <description>Going into week 5, I started with a code-complete but very much incorrect implementation of the TDI_SEND and TDI_RECEIVE IRQ handlers. My TCP_CONTEXT data structure and the existing ADDRESS_FILE data structure both did not contain a way to keep track of pending IRQs, so I had no way of keeping track of outstanding pending IRQs and what connection contexts they were supposed to be associated with. Without a clear scheme for keeping track of the information, IRP pointers invariably got lost.</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Week 4</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-4/</link>
      <pubDate>Tue, 21 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-4/</guid>
      <description>Mid-term evaluations opened up yesterday, and naturally I&#39;ve been super-busy this week, making sure I&#39;ve earned my keep! ;)
Getting the New Size Recognized in Windows Recall that I ended last week being able to extend a file&#39;s size in ReactOS, but Windows wasn&#39;t showing the newly written data when opening the file in notepad. My mentor Pierre and forum member Pathoswithin both suggested, independently, that my problems with extending a file might be caused by only increasing the size of the $DATA attribute and not also modifying the appropriate $FILE_NAME attribute associated with the file.</description>
    </item>
    
    <item>
      <title>SATA AHCI Driver GSoC - Week 4 Update</title>
      <link>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-4-update-0/</link>
      <pubDate>Tue, 21 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-4-update-0/</guid>
      <description>This week I worked on AHCI IO Request Processing and FIS programming part. I implemented IO Queue, Slot distribution mechanism for AHCI requests. Updated Github&#39;s PR for next round of code review.
Next I will be working on port programming i.e. telling the controller about the slots that I&#39;ve allotted for IO request.
Very soon we will have a running AHCI device driver :D
I also added a notes.txt file which actually tracks my progress for every routine/support link</description>
    </item>
    
    <item>
      <title>USB 1.1 UHCI improvements GSoC - Week 4</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-11-uhci-improvements-gsoc-week-4/</link>
      <pubDate>Mon, 20 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-11-uhci-improvements-gsoc-week-4/</guid>
      <description>TO LEARN HOW TO SWIM, YOU NEED TO GET INTO THE WATER. At the start of the week I was debugging the system crash on ROS&#39;s usbhub unload in Win2k3. I spent a lot of time asking questions and discussing topics related to WDM with my mentor Thfabba. He kind of kickstarted me, giving small tasks and then analyzing with me the results. During that sessions I have gathered many new tips related debugging and also started feeling much more confidently working with WDM.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 4</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-1-0/</link>
      <pubDate>Sat, 18 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-1-0/</guid>
      <description>This week, I started off chasing down how to handle TDI sending a new IRQ to create a connection context immediately after a connection has been accepted on the server end. At first, I thought it was for socket multiplexing. As I talked more with Art and looked more into the lwIP source code, I realized that this is an attempt by TDI to support backlogging. As such, this was not something I had to actively handle since lwIP has full backlogging support.</description>
    </item>
    
    <item>
      <title>SATA AHCI Driver GSoC - Week 3 Update</title>
      <link>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-3-update/</link>
      <pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-3-update/</guid>
      <description>I&#39;ll put my vision toward the version 1.0 of driver first. If we come to the uni_ata which is actually right now supporting React OS with SATA AHCI driver. uni_ata is actually operating SATA device in legacy mode of operation and with no support of NCQ. Although NCQ is not really necessary for now, because I think we are right now targeting to have hardware support as much as we can (this is as per my understanding).</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Week 3</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-3/</link>
      <pubDate>Mon, 13 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-3/</guid>
      <description>Learning About NTFSI spent most of the week studying NTFS in-depth, and really learning about some of the things I glossed over before. This is something I had to do make meaningful progress with increasing file sizes. This involved (re-re-re-)reading the three relevant chapters in File System Forensic Analysis.
Also, in order to retain and really understand the information, I&amp;#39;ve started making a standalone app that lists files on an NTFS partition.</description>
    </item>
    
    <item>
      <title>USB 1.1 UHCI improvements GSoC - Week 3</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-11-uhci-improvements-gsoc-week-3/</link>
      <pubDate>Mon, 13 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-11-uhci-improvements-gsoc-week-3/</guid>
      <description>This week I haven&amp;rsquo;t spent much time on project, I was passing yearly final exams in my university. By the end of the week I have passed all my exams with excellence (which means that I&amp;rsquo;ll keep my scholarship) and with peace of mind started working on my GSoC project.As I mentioned in previous post I have found some Issues in ROS USB stack driver&amp;rsquo;s uninstall/unload flows, and started debugging. This time I decided to spend some time to understand deeper ROS&amp;rsquo;s USB stack (from code perspective) before any try of debugging, because I&amp;rsquo;ll spend much more trying to understand things on the fly.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 3</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-3/</link>
      <pubDate>Sun, 12 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-3/</guid>
      <description>In week 3, I discovered a lot more about how data is being passed around.
After more in depth inspection of the memory, I realized that Winsock was passing on the correct IP address; I just wasn&#39;t aware of the data structure it was using. After modifying my driver to correctly extract the IP address from the IRP, my test server and client performed a successful TCP connection hand shake, with my client program exiting correctly.</description>
    </item>
    
    <item>
      <title>SATA AHCI Driver GSoC - Week 2 Update</title>
      <link>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-2-update/</link>
      <pubDate>Tue, 07 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-2-update/</guid>
      <description>In the first week I gained enough knowledge to kick start the coding part. I started implementation with minimal featured design idea i.e. started implementation of non-optional routines first and in order they are being called by Storport/OS. Listed below   DriverEntry:  Registered the driver with very standard configurations (that I learned by WDK samples) and with non-optional (required entrypoint for Storport) Hw Routines. Standard configuration includes NeedPhysicalAddresses (TRUE)</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Week 2</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-2/</link>
      <pubDate>Mon, 06 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-2/</guid>
      <description>This week I spent a few days hammering out all the problems I was having with MSVC builds, understanding exactly what was causing them, and updating configure.cmd so nobody else would have them in the future. See my forum post for the details. I&#39;ve also been doing a lot of reading this week, both on the peculiarities of NTFS, and on Windows file system drivers. File System Forensic Analysis by Brain Carrier has been an incredible resource for the former, and Windows Nt File System Internals by Rajeev Nagar has been indispensable for the latter.</description>
    </item>
    
    <item>
      <title>USB 1.1 UHCI improvements GSoC - Week 2</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-11-uhci-improvements-gsoc-week-2/</link>
      <pubDate>Mon, 06 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-11-uhci-improvements-gsoc-week-2/</guid>
      <description>The second week of coding period I spend on testing and debugging.
As you may remember from previous post, there were all fails in UHCI test spreadsheet. This week I&amp;#39;ve done same tests with all ROS&amp;#39;s usb stack injected along with &amp;quot;usbuhci.sys&amp;quot; but this also not helped. So we can assume that UHCI is not working under 2k3. Also I&amp;#39;ve found bug (crash) in UHCI driver uninstall flow. In case of EHCI, it is normally denying removal, but in case of UHCI I&amp;#39;m seeing system crash coming from &amp;quot;hub.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 2</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-2/</link>
      <pubDate>Fri, 03 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-2/</guid>
      <description>In my second week of working on this project, I have made some progress in linking the Winsock listen() and connect() calls to their lwIP implementations. As with last week, Art Yerkes has been a great souce of information whenever I get stuck on anything.&amp;nbsp;
I spent the first part of the week figuring out how to extract the information I need from the IRP my driver receives in order to pass it along to lwIP.</description>
    </item>
    
    <item>
      <title>SATA AHCI Driver GSoC - Week 1 Update</title>
      <link>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-1-update/</link>
      <pubDate>Thu, 02 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/sata-ahci-driver-gsoc-week-1-update/</guid>
      <description>To be honest I started working on project after my college finals i.e. 27th of May, Before that I tried to setup build environment and test bed in virtual machine running win2k3. I was totally new to NT driver development so I started my journey with reading storage stack model and NT driver development guide.
In the first week I explored storage stack of NT 5.2 completely and presented my work plan to my mentor.</description>
    </item>
    
    <item>
      <title>USB 1.1 UHCI improvements GSoC - Week 1</title>
      <link>https://costanzaltavilla.github.io/blogs/usb-11-uhci-improvements-gsoc-week-1/</link>
      <pubDate>Mon, 30 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/usb-11-uhci-improvements-gsoc-week-1/</guid>
      <description>Hi! My name is Vardan and during this GSoC I&amp;#39;ll work on UHCI driver improvements.
&amp;nbsp;
&amp;nbsp;
Why ROS?Now, when human is becoming more and more dependent on computer it becoming critical to have open-source OS on it. You can feel really secured only when you&amp;lsquo;re able (allowed) to see any part of OS which can control all your data. For the student who is studying computer science, the best choice was Linux (especially when classroom computers working only under it).</description>
    </item>
    
    <item>
      <title>NTFS Write Support GSoC - Week 1 Update</title>
      <link>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-1-update/</link>
      <pubDate>Sun, 29 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntfs-write-support-gsoc-week-1-update/</guid>
      <description>Hi there! My name is Trevor Thompson and I&#39;m working on NTFS write support for Google Summer of Code 2016. Status Update: I now know the basics of windbg. I&#39;m surprised at how powerful this tool is! A few weeks ago, Pierre asked if I could take a look at largemcb.c and help him fix the bugs that were causing kmtest to fail the FsRtlMcb test. I didn&#39;t have a chance to look at it until now, but I felt like this would be a perfect opportunity to get some practice with windbg and get started with serious React OS development.</description>
    </item>
    
    <item>
      <title>Google SoC lwIP Report Week 1</title>
      <link>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-1/</link>
      <pubDate>Fri, 27 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/google-soc-lwip-report-week-1/</guid>
      <description>Note: I am publishing these but each student is responsible for actually writing them.
I am Zuodian Hu or, as I like to be called, Dian (pronounced the same as Dan). I just finished my junior year at the University of Wisconsin at Madison, where I am working on an electrical engineering and computer science double major. My personal interest lies in systems programming and digital logic. In addition to my classes, I play violin in the UW-Madison symphony orchestra and do programming for Wisconsin Robotics and the UW-Madison team competing in the NASA Robotics Mining Competition.</description>
    </item>
    
    <item>
      <title>Unexpected bug cascade - or how seemingly missing bugs in MSVC builds reveal actual bugs</title>
      <link>https://costanzaltavilla.github.io/blogs/unexpected-bug-cascade-or-how-seemingly-missing-bugs-msvc-builds-reveal-actual-bugs/</link>
      <pubDate>Sun, 27 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/unexpected-bug-cascade-or-how-seemingly-missing-bugs-msvc-builds-reveal-actual-bugs/</guid>
      <description>I was looking into CORE-9105, a crash in wget.exe, but I couldn&#39;t reproducde it, so I asked Daniel whether he was using an MSVC build or a GCC build. He used a GCC build and I was using an MSVC build. So I tried with a GCC build and the bug appeared. So I looked at this thing with kdbg. And there the first bug showed up.
Bug #1: KDBG and break points I set a breakpoint at a position that I wanted to step through and KDBG stopped there.</description>
    </item>
    
    <item>
      <title>A Very Bunny Christmas</title>
      <link>https://costanzaltavilla.github.io/blogs/very-bunny-christmas/</link>
      <pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/very-bunny-christmas/</guid>
      <description>See here for explanation of the Bunnies.
When Z logged onto the ROS virtual net he was met with two unexpected things.&amp;nbsp; Seeing as one involved an AI hivemind that the team still did not fully understand he decided to satisfy his curiosity with the other surprise.
“Colin.”
The German man glanced up.&amp;nbsp; “Oh, hey Z.&amp;nbsp; Wasn’t expecting you in today.”
“Likewise,” Z said with a slight smirk.&amp;nbsp; “Don’t you Europeans check out for the entire week before Christmas?</description>
    </item>
    
    <item>
      <title>Introduction to NDIS Driver Development</title>
      <link>https://costanzaltavilla.github.io/blogs/introduction-ndis-driver-development/</link>
      <pubDate>Thu, 17 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/introduction-ndis-driver-development/</guid>
      <description>Drivers come in many forms as does the hardware they control.&amp;nbsp; Perhaps one of the simplest types of drivers to write for the NT kernel is an NDIS driver for network cards, simplest being in the context of kernel development.&amp;nbsp; That simplicity comes from how the framework used for NIC drivers abstracts away some of the manual setup needed for drivers, eliminating a lot of boilerplate code and making it easier to get a handle on the actual hardware operations being performed.</description>
    </item>
    
    <item>
      <title>ReactOS printing for the first time!</title>
      <link>https://costanzaltavilla.github.io/blogs/reactos-printing-first-time/</link>
      <pubDate>Sat, 25 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/reactos-printing-first-time/</guid>
      <description>As some of you may already know, my university gave me the unique opportunity to choose a ReactOS topic for my bachelor thesis. Three months ago, my decision fell on the Printing Stack, which was totally non-existing in ReactOS at that time. Since then, you can watch my daily progress in the colins-printing-for-freedom branch.
The Printing Stack as found in modern Windows&amp;reg; versions is a beast of its own. Microsoft&amp;reg; never wanted to sacrifice backwards compatibility with each new Windows version, so the widely used higher level GDI Printing APIs (like StartDoc or EndDoc found in gdi32.</description>
    </item>
    
    <item>
      <title>The First Ever ReactOS Hackfest!</title>
      <link>https://costanzaltavilla.github.io/blogs/first-ever-reactos-hackfest/</link>
      <pubDate>Sat, 20 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/first-ever-reactos-hackfest/</guid>
      <description>Join us for the very first ReactOS Hackfest from Friday, 7th August to Wednesday, 12th August 2015, in the German city of Aachen. Discover Germany&#39;s most-Western city in the direct neighborhood of Belgium and the Netherlands. Within the historical city center, Aachen offers a scientific environment and a high density of pubs. Let&#39;s catch this atmosphere to code the week away and achieve great results as a team!
 It is now time to plan your trip!</description>
    </item>
    
    <item>
      <title>Rounding and integer math</title>
      <link>https://costanzaltavilla.github.io/blogs/rounding-and-integer-math/</link>
      <pubDate>Sat, 16 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/rounding-and-integer-math/</guid>
      <description>It sometimes happens that in your program you need to divide integer values and then round the result.
Something like
&amp;nbsp;&amp;nbsp;&amp;nbsp; int result = lrint((double)int_a / (double)int_b);
But sometimes it is desirable to not use floating point math at all. The question is: Can we do the same calculation with integer math and get exactly the same result?
Let&amp;#39;s simplify our case, by limiting to unsigned values (for signed values it is very similar, only the formulas get a bit more complex).</description>
    </item>
    
    <item>
      <title>ReactOS Shop Grows!!</title>
      <link>https://costanzaltavilla.github.io/blogs/reactos-shop-grows/</link>
      <pubDate>Thu, 23 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/reactos-shop-grows/</guid>
      <description>One of the most important ways to maintain our ReactOS development is through Donations, another way is through helping us reach out to new and cool developers by sharing these news! We&#39;re proud to share that our Shop is not just including the USB stick, but also.. 6 new and crazy pieces! A must have: An awesome ReactOS mug for your breakfast or evening coffee which can&#39;t look better. Do you see how that black background makes ReactOS orb shine?</description>
    </item>
    
    <item>
      <title>How do security issues happen?</title>
      <link>https://costanzaltavilla.github.io/blogs/how-do-security-issues-happen/</link>
      <pubDate>Wed, 11 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/how-do-security-issues-happen/</guid>
      <description>If you are a Windows user, you may be used to seeing a bunch of updates pop up around the second Tuesday of every month that purport to fix &#34;critical security issues.&#34; Microsoft&#39;s continuous effort to fix these vulnerabilities in its operating system consumes a lot of resources, but it is well worth it to the users: in a world of ever-increasing cyber security threats, no hole in our computers&#39; defenses should be left open to potential attackers.</description>
    </item>
    
    <item>
      <title>Post-vacational resolutions (A.K.A. Present and future of my ReactOS contract)</title>
      <link>https://costanzaltavilla.github.io/blogs/post-vacational-resolutions/</link>
      <pubDate>Mon, 26 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/post-vacational-resolutions/</guid>
      <description>Hello everyone!
You will have noticed the long delay since my last report, and may be wondering what has happened. I will try to explain.
The last report was published on the 24th, right before christmas eve, when my vacation started. I took my vacation so that I could rest, clear my head, and regain energy so that I could resume my work in January at full speed. Over the christmas days, I had time for resting, games, hobbies, and family, and this gave me a lot of time to think.</description>
    </item>
    
    <item>
      <title>Decorating the shell tree</title>
      <link>https://costanzaltavilla.github.io/blogs/decorating-shell-tree/</link>
      <pubDate>Wed, 24 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/decorating-shell-tree/</guid>
      <description>Hello everyone,
Because Christmas was so close to the weekend, I decided to delay the report a few days, and release it on time for the holidays, and this way include in the report everything that has happened over the weekend and the beginning of this week.
The past week began by reviewing some patches that were pending for a LONG time. Sadly, most of them were too bit-rotten to be applicable as-is, so I had to contact the patches’ authors and request an update.</description>
    </item>
    
    <item>
      <title>On Patches</title>
      <link>https://costanzaltavilla.github.io/blogs/on-patches/</link>
      <pubDate>Mon, 15 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/on-patches/</guid>
      <description>Before I begin, I should make clear that for all intents and purposes I am not a &#34;developer&#34; on the project. I have actually tried very hard to avoid falling into that role, as most people who do become developers end up getting sucked into that work to the point where of the time they do dedicate to the project, they tend to not have any left over to do other work that the project needs.</description>
    </item>
    
    <item>
      <title>Unclean cleanups</title>
      <link>https://costanzaltavilla.github.io/blogs/unclean-cleanups/</link>
      <pubDate>Sat, 13 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/unclean-cleanups/</guid>
      <description>Hello, everyone!
I think the best way to explain how this week started is by recreating a conversation that happened on IRC (shortened and cleaned so that it looks more serious and professional then the typical IRC conversation):
gadamopoulos: Oh gigaherz, we have bugs due to the conversion to c++. Pretty obvious ones. CTaskBand is a mess: punkSite is ambigouous, as member and parameter.
gigaherz: I tried to find all of those, did I miss some?</description>
    </item>
    
    <item>
      <title>Funny title not found</title>
      <link>https://costanzaltavilla.github.io/blogs/funny-title-not-found/</link>
      <pubDate>Sun, 07 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/funny-title-not-found/</guid>
      <description>Hello everyone,
If you remember from last week, my top priority was to investigate the crash when pasting files, but because Giannis insisted a bit that I should fix the merged folders usage so that the windows classes can be used instead of our own, I went back to the merged folders, and started looking at why the windows classes didn’t work. The first thing I had to fix was a misunderstanding of the return value of the filtering callback, which returns S_FALSE if the item is shown, and S_OK if the item has to be filtered away.</description>
    </item>
    
    <item>
      <title>Dislocated localizations</title>
      <link>https://costanzaltavilla.github.io/blogs/dislocated-localizations/</link>
      <pubDate>Mon, 01 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/dislocated-localizations/</guid>
      <description>Hello and sorry for yet another delay!
As you will most probably know (and if you don’t, you should take a look at the news on the front page!), the shell branch was merged last Wednesday evening, as a thanksgiving gift from the project to all the contributors. As things happen when a big merge is done and people with varied configurations start testing, it wasn’t 5 minutes that the first big “oh shit” bug report came in.</description>
    </item>
    
    <item>
      <title>Patching Patches and Testing Tests</title>
      <link>https://costanzaltavilla.github.io/blogs/patching-patches-testing-tests/</link>
      <pubDate>Mon, 24 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/patching-patches-testing-tests/</guid>
      <description>Hello and sorry for the delay.
This past week has been rather strange. My goal was to add some quick tests to ensure that my implementation was matching Windows’ behaviour, and then send the changes to WINE. But as I was adding more details to test, I was finding more mismatches between Windows and ReactOS (well, WINE code). Annoyingly, most of the mismatches are in the code not related to my changes, and on top of that, a few of the returned values had unexpected content.</description>
    </item>
    
    <item>
      <title>Network development branch</title>
      <link>https://costanzaltavilla.github.io/blogs/network-development-branch/</link>
      <pubDate>Mon, 17 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/network-development-branch/</guid>
      <description>People following the SVN logs may have noticed Jerome Gardou creating a network rework branch and ripping out massive chunks of the current code. To explain what prompted this requires a bit of history and background. Many years ago Cameron Gutman imported the lightweight IP (lwIP) library so that ReactOS could take advantage of its TCP implementation for the network stack. It was only used for TCP however, meaning ReactOS was still relying on its existing implementation for things like UDP and ICMP.</description>
    </item>
    
    <item>
      <title>Translatable emptyness and Long-winded Shortcuts</title>
      <link>https://costanzaltavilla.github.io/blogs/translatable-emptyness-long-winded-shortcuts/</link>
      <pubDate>Sat, 15 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/translatable-emptyness-long-winded-shortcuts/</guid>
      <description>Hello and welcome back to my weekly report.
As I said in the last report, I ended the week trying to fix the start menu closing on a second click. The realization that Windows doesn’t close the shell menus on mouse up, allowed me to simplify some of the logic, but the issue still resisted my attempts.
After some very long hours trying to figure out where the code went wrong, I realized the order of the events was actually wrong.</description>
    </item>
    
    <item>
      <title>Post-Incrementing the C</title>
      <link>https://costanzaltavilla.github.io/blogs/post-incrementing-c/</link>
      <pubDate>Mon, 10 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/post-incrementing-c/</guid>
      <description>Hello again, people.
Wow so another week has passed, and the whole weekend too. I feel a bit like I was sucked into a temporal distortion, because I can’t really tell where all these hours have gone. Heck, I almost forgot to write the report! Thankfully, the cold I spoke about last week, it didn’t complicate itself, so I have been able to work over the week.
I suppose many of you didn’t wait for the surprise and looked at the commit logs, or read the comment thread for the “spoilers”.</description>
    </item>
    
    <item>
      <title>Two Steps from [the S]hell</title>
      <link>https://costanzaltavilla.github.io/blogs/two-steps-from-shell/</link>
      <pubDate>Mon, 03 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/two-steps-from-shell/</guid>
      <description>Hello everyone, and sorry for the delay.
I caught a bad cold (that may or may not be complicated with a throat infection -- we&#39;ll see) so I was lacking the necessary concentration to write this report earlier.
As Z98 said last weekend, it has been some very busy days for all the team. I want to reiterate all the appreciation for the help given by everyone. There is just so much debugging I can do without my head exploding, and finding leaks tends to cross that line.</description>
    </item>
    
    <item>
      <title>Plugging Leaks</title>
      <link>https://costanzaltavilla.github.io/blogs/plugging-leaks/</link>
      <pubDate>Mon, 27 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/plugging-leaks/</guid>
      <description>David is currently a tad busy getting the shell branch ready for the big merge, so I am taking over his usual report this time. Last week was a flurry of activity as David, Giannis, and a community member who wishes to be identified as &#34;V&#34; (those of you in IRC will know who he is, but he requested that we refrain from posting his nick and I expect the rest of the community to honor his request) investigated the large number of memory leaks that explorer_new suffered from.</description>
    </item>
    
    <item>
      <title>MIAOW Open Source GPU</title>
      <link>https://costanzaltavilla.github.io/blogs/miaow-open-source-gpu/</link>
      <pubDate>Mon, 20 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/miaow-open-source-gpu/</guid>
      <description>About a year ago I basically disappeared from the project, showing up only very intermittently to write up snippets of text as requested by the team. The reason was I was ramping up for my master&#39;s project, an attempt to put a GPU design on an FPGA. For those of you who do not know what FPGAs are, think of them as chips that you can modify the digital logic on to change its functionality.</description>
    </item>
    
    <item>
      <title>Circular leaks</title>
      <link>https://costanzaltavilla.github.io/blogs/circular-leaks/</link>
      <pubDate>Sun, 19 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/circular-leaks/</guid>
      <description>Hello again!
As I mentioned in the last report, I had been writing tests to find the problems in SHFileOperation. All I knew was that in some situations it would end without fully writing some file, so I wrote tests moving, copying and deleting a folder structure, and comparing the copy with the original. I tried with empty files first, then with files of random sizes, then with really big files, and also with a lot of files of relatively small size.</description>
    </item>
    
    <item>
      <title>PITA bugs part 5</title>
      <link>https://costanzaltavilla.github.io/blogs/pita-bugs-part-5/</link>
      <pubDate>Thu, 16 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/pita-bugs-part-5/</guid>
      <description>I mentioned in my last rant about annoying bugs that I do firmware development for the LHC triggers. In addition to that however, as one of the people with experience doing low level embedded programming on the team, I can get tapped to work on a variety of other systems. Recently I was asked to update an old AVR microcontroller codebase that was written for a proprietary toolchain to use AVR-GCC.</description>
    </item>
    
    <item>
      <title>View Popups and Unreliable Operations</title>
      <link>https://costanzaltavilla.github.io/blogs/view-popups-and-unreliable-operations/</link>
      <pubDate>Sat, 11 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/view-popups-and-unreliable-operations/</guid>
      <description>Hello!
It’s this time of the week again where I have to sit down and try to remember everything I have been doing over the week.
I began the week by looking at some older pending bugs. First, I looked at an issue where using the branch with the vmware audio driver installed would crash stobject.dll and because it’s loaded into explorer-new, the rest of the desktop and taskbar. I couldn’t reproduce this issue, so I moved on.</description>
    </item>
    
    <item>
      <title>Inter-process miscommunication</title>
      <link>https://costanzaltavilla.github.io/blogs/inter-process-miscommunication/</link>
      <pubDate>Fri, 03 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/inter-process-miscommunication/</guid>
      <description>Hello again!
This week has been strange. It has mostly been a series of disappointments, but it ended in some really good news.
I started this week by implementing the parser for the shell DDE commands. The syntax is simple, so the parser itself didn’t take long to finish. I tested it and debugged it in Windows at first, and when I was satisfied that the code was working the way I wanted it, I moved the functions into their rightful place inside shell32, and proceeded to test the function in ReactOS.</description>
    </item>
    
    <item>
      <title>Moonshot Finale</title>
      <link>https://costanzaltavilla.github.io/blogs/moonshot-finale/</link>
      <pubDate>Wed, 01 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/moonshot-finale/</guid>
      <description>The virtual conference room was deathly quiet as Colin and Z finished their report.&amp;nbsp; The gathered represented the core of the project’s decision makers as well as a few of the relevant developers and alumni.&amp;nbsp; All of them were gapping in some fashion or another at the two men standing before them.&amp;nbsp; The first one to verbally react was KJK, who burst out laughing.&amp;nbsp; The others looked somewhat incredulously at him until he managed to recompose himself.</description>
    </item>
    
    <item>
      <title>Locked at Sharing</title>
      <link>https://costanzaltavilla.github.io/blogs/locked-at-sharing/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/locked-at-sharing/</guid>
      <description>Hello again!
You may remember from last week I said I would need more information in order to implement the mechanism browseui uses to open new windows in an existing process.
Well, spoiler alert if you haven’t read the SVN log: I got the information, and I wrote an implementation.
First of all, it turns out message 1037 is related to the rooted idlists. Since rooting is completely unimplemented at all the levels down to the implementation of the idlists, I stopped trying to figure out that message, and instead focused on the important one, 1035.</description>
    </item>
    
    <item>
      <title>Moonshot Part 3</title>
      <link>https://costanzaltavilla.github.io/blogs/moonshot-part-3/</link>
      <pubDate>Tue, 23 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/moonshot-part-3/</guid>
      <description>The answer to the mystery about the bunnies’ extracurricular activities came soon enough, in no small part thanks to the amount of time the two spent investigating.&amp;nbsp; The bunnies were extremely useful helper utilities and if they were suffering from a bug, it needed fixing otherwise the project would risk losing one of its more useful tools.&amp;nbsp; By the end of these events the bunnies would be considered one of the core assets underpinning the entire project.</description>
    </item>
    
    <item>
      <title>Shared memory messages</title>
      <link>https://costanzaltavilla.github.io/blogs/shared-memory-messages/</link>
      <pubDate>Sun, 21 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/shared-memory-messages/</guid>
      <description>Hello!
Another weekend, another report.
The week was slightly shorter for me due to having the project defense on Tuesday, so I spent most of Monday preparing for the presentation, and most of Tuesday afternoon recovering from it. If you are curious, I got a 9.5/10 on the project. ;P
In the context of the shell, this week I mostly continued my investigations on the IPC mechanism used by browseui to open new windows in the existing process.</description>
    </item>
    
    <item>
      <title>Lines of commands</title>
      <link>https://costanzaltavilla.github.io/blogs/lines-of-commands/</link>
      <pubDate>Fri, 12 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/lines-of-commands/</guid>
      <description>Hello again!
When I said last week’s report would be short, I was still planning to write a few lines about what I had been doing on the spare time from the university project, but by the time the weekend came I was way too mentally exhausted to actually do it. Then I started refreshing my mind with what I was in the middle of doing, and by Sunday night I had the explorer command line parser working more or less as intended (it still has a few places where it doesn’t behave exactly like Windows’ parser, but it’s close enough for what we need).</description>
    </item>
    
    <item>
      <title>Memory Manager Development</title>
      <link>https://costanzaltavilla.github.io/blogs/memory-manager-development/</link>
      <pubDate>Tue, 09 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/memory-manager-development/</guid>
      <description>The legacy memory manager in ReactOS has many idiosyncrasies and architectural quirks, issues that have dogged the project for many years now. The ARM team began a rewrite, colorfully named Another Rewrite of the Memory Management Module (ARM3), that partially supplanted the old memory manager but a big chunk of responsibility still lie with it, namely in the form of MEMORY_AREA. Simply put, MEMORY_AREA was the means by which memory address ranges were tracked, tracking which is necessary for things like handling paging.</description>
    </item>
    
    <item>
      <title>Moonshot Part 2</title>
      <link>https://costanzaltavilla.github.io/blogs/moonshot-part-2/</link>
      <pubDate>Tue, 02 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/moonshot-part-2/</guid>
      <description>The incident that ultimately aroused the suspicion of the project technically occurred first but the analysis was concluded afterwards so it was generally treated as the second checkpoint in the road to the revelation.&amp;nbsp; The initial reaction hovered between heavy uncertainty and cautious concern, a concern that only grew over time.
 The briefing with the various governmental representatives came and went and was as excruciatingly pointless and braindead as Z had presumed.</description>
    </item>
    
    <item>
      <title>Parsing the commands</title>
      <link>https://costanzaltavilla.github.io/blogs/parsing-the-commands/</link>
      <pubDate>Sat, 30 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/parsing-the-commands/</guid>
      <description>Hello, Everyone!
I mentioned last week, that I had started looking at the DDE server support, and it would take a while.
What I forgot to mention, is that the deadline for handing over my final project at university is next Friday, and the defense for the project a couple weeks after that. Ideally, if me &amp;amp; the other guys working on the project had done everything on schedule, we’d just be finishing off the documentation and we’d be almost ready, but as projects go, it’s always when the deadline looms close that you remember everything you were supposed to have been doing.</description>
    </item>
    
    <item>
      <title>PSEH Data Corruption</title>
      <link>https://costanzaltavilla.github.io/blogs/pseh-data-corruption/</link>
      <pubDate>Wed, 27 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/pseh-data-corruption/</guid>
      <description>An extremely rare data corruption issue caused by the Portable Structured Exception Handling library was discovered recently, one that is rather interesting in all the factors to come into play to bring it about. PSEH was a library created by KJK::Hyperion and massively overhauled by Timo Kreuzer for its third iteration, intended to bring Structured Exception Handling to GCC. SEH is natively supported by Microsoft&#39;s compilers and underpins a lot of error handling on Windows and so was necessary for proper compatibility between ReactOS&#39; components and Windows&#39;.</description>
    </item>
    
    <item>
      <title>Dynamic menus and miscounted references</title>
      <link>https://costanzaltavilla.github.io/blogs/dynamic-menus-miscounted-references/</link>
      <pubDate>Sat, 23 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/dynamic-menus-miscounted-references/</guid>
      <description>Hello everyone,
I know I promised weekly reports but it’s summer time and, although I haven’t really been out on vacation, I have been taking my schedule a lot more loosely than usual.
After fixing the stobject compilation, I set my sights on the file browser menus. I began by trying to figure out how the Windows shell manages the menus, and I realized that most of the actual work was done in the WM_INITMENUPOPUP message handler.</description>
    </item>
    
    <item>
      <title>Moonshot Part 1</title>
      <link>https://costanzaltavilla.github.io/blogs/moonshot-part-1/</link>
      <pubDate>Fri, 22 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/moonshot-part-1/</guid>
      <description>These days when asked what a moonshot was, most people would respond with blank looks and then ask if it had something to do with the moon.&amp;nbsp; A few more knowledgeable persons might respond that it referred to the Apollo program.&amp;nbsp; Still others would say it referred to any project whose chances of success were low or might take a very long time to show demonstrable success.&amp;nbsp; The Reactive Operator System fell squarely in that third category and it was with some irony that with every success it achieved its future goals became ever loftier.</description>
    </item>
    
    <item>
      <title>Contributions: UltraVNC 1.0.5</title>
      <link>https://costanzaltavilla.github.io/blogs/contributions-ultravnc/</link>
      <pubDate>Mon, 04 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/contributions-ultravnc/</guid>
      <description>Thanks to Oldman, we&#39;re proud to announce that UltraVNC 1.0.5 is now running in ReactOS.
UltraVNC is a powerful, easy to use and free remote pc access software that can display the screen of another computer (via internet or network) on your own screen. The program allows you to use your mouse and keyboard to control the other PC remotely. It means that you can work on a remote computer, as if you were sitting in front of it, right from your current location.</description>
    </item>
    
    <item>
      <title>Shell Service Objects</title>
      <link>https://costanzaltavilla.github.io/blogs/shell-service-objects/</link>
      <pubDate>Sat, 02 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/shell-service-objects/</guid>
      <description>Hello everyone! Long time no see!
As some of you will probably know by now, I had a cooking accident, wherein my hand was splashed by very hot olive oil. I will skip the shameful details, but I want to say that for the next 10 days, I was unable to code properly.
After those first 10 days, my bandage was replaced by a lighter dressing, which allowed me more mobility in my hand, and I began looking at my TODO list, for something “lighter” to pass the time.</description>
    </item>
    
    <item>
      <title>Merged Folders and undocumented interfaces</title>
      <link>https://costanzaltavilla.github.io/blogs/merged-folders-undocumented-interfaces/</link>
      <pubDate>Sat, 12 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/merged-folders-undocumented-interfaces/</guid>
      <description>Hello, and welcome to my weekly report. I apologize for not having a report last weekend, so this week’s report will be longer than usual.
Reading the issues in the community-powered Shell TODO List got me thinking about some issues that I previously thought were too complex for phase 1. Biggest of all, was the implementation of the CMergedFolder class structure. This set of classes is almost completely undocumented, and I suspect it has multiple features that don’t really fit together.</description>
    </item>
    
    <item>
      <title>The TODO list, collaborative edition</title>
      <link>https://costanzaltavilla.github.io/blogs/todo-list-collaborative-edition/</link>
      <pubDate>Sat, 28 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/todo-list-collaborative-edition/</guid>
      <description>Hello! Welcome back to my weekly status report. I want to finally start writing the reports on Fridays, so it hasn’t been that many days since the last report, and there was a holiday in the middle of this week and some craziness you may already be aware of, so this report may end up either shorter than usual, or at least different. Sorry about that!
I started the week by looking back at older “known issues”.</description>
    </item>
    
    <item>
      <title>PITA bugs part 4</title>
      <link>https://costanzaltavilla.github.io/blogs/pita-bugs-part-4/</link>
      <pubDate>Thu, 26 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/pita-bugs-part-4/</guid>
      <description>Most of the developers already know this, but my current job is as an engineer working on firmware and software for the trigger system of the Large Hadron Collider (yes, the thing that discovered the Higgs boson). Triggers are basically filters that take in the raw data coming out of the LHC and whittle down the noise to figure out what data is worth keeping and what can be discarded. This is something of a necessity as one of the physics professors that I spoke to mentioned the LHC generates something like a terabyte of data a second when doing collisions.</description>
    </item>
    
    <item>
      <title>Spilling the Wine</title>
      <link>https://costanzaltavilla.github.io/blogs/spilling-the-wine/</link>
      <pubDate>Mon, 23 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/spilling-the-wine/</guid>
      <description>After the frustration of last week, I decided to take one last look at Deleaker, and try to figure out why it crashes in ReactOS during COM registration.
The problem is, looking at the disassembly made it clear that the code is obfuscated. The functions start in one address, and then they jump all over the place, creating a mesh of small function chunks that even the best disassemblers seem unable to follow.</description>
    </item>
    
    <item>
      <title>Contributions: Command &amp; Conquer: Red Alert 2</title>
      <link>https://costanzaltavilla.github.io/blogs/contributions-command-conquer-red-alert-2/</link>
      <pubDate>Mon, 16 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/contributions-command-conquer-red-alert-2/</guid>
      <description>Thanks to BlackFox, we are proud to announce that &#34;C&amp;amp;C: Red Alert 2&#34; is now running in ReactOS.
So if you have a &#34;lazy evening&#34; just give it a try and enjoy the Allied or the Soviet campaigns!
A GamePro reviewer said about this game: &#34;Command &amp;amp; Conquer: Red Alert 2 is the best 2D real-time strategy game since Starcraft&#34;.
&amp;nbsp;
&amp;nbsp;
The ReactOS Menu is shown just to prove this is not a Windows capture but a ReactOS one.</description>
    </item>
    
    <item>
      <title>Machining Virtually</title>
      <link>https://costanzaltavilla.github.io/blogs/machining-virtually/</link>
      <pubDate>Sat, 14 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/machining-virtually/</guid>
      <description>As I said in the last report, the week began by setting up a development environment in a Windows Server 2003 VM.
I had to install Visual Studio 2010 and RosBE, and then download and compile the source code to verify that everything was working correctly. When I tried to compile, I realized two things. First, that vs2010 is much buggier than I remembered, and second, that compiling in a Virtual Machine with one cpu core is very very slow.</description>
    </item>
    
    <item>
      <title>Leaks and corruption</title>
      <link>https://costanzaltavilla.github.io/blogs/leaks-and-corruption/</link>
      <pubDate>Mon, 09 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/leaks-and-corruption/</guid>
      <description>After I finally managed to write last week’s report (have you ever tried to write something, and the words wouldn’t come out at all?), I continued looking at those nasty menu leaks.
In an attempt to make the task simpler, I started looking for software with the ability to detect USER handle leaks. I checked the free (libre) alternatives first, but after not much luck I moved on to free (beer) software, and to fully commercial and proprietary software, when I finally found Deleaker.</description>
    </item>
    
    <item>
      <title>Leak-leaking leaks</title>
      <link>https://costanzaltavilla.github.io/blogs/leak-leaking-leaks/</link>
      <pubDate>Mon, 02 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/leak-leaking-leaks/</guid>
      <description>I began the week by fixing the issue where the right button wasn’t detected by the code managing the start menu and submenus.
I had been told that there was a JIRA issue related to the shutdown dialog, and that it had been implemented in some way in trunk already. I considered the means of calling that dialog from the shell32 function the start menu calls, but I dropped the idea some hours later, when I decided the code in msgina wasn’t designed to be called externally.</description>
    </item>
    
    <item>
      <title>Advancing the TODO list...</title>
      <link>https://costanzaltavilla.github.io/blogs/advancing-the-todo-list/</link>
      <pubDate>Mon, 26 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/advancing-the-todo-list/</guid>
      <description>If you recall from the last report, I had a few issues that I couldn’t fix myself. Well, Huw (Frontier) surprised me by sending me a patch to fix the activation issue!
One of the issues in explorer-new was that every time you clicked on the desktop to open a new folder, it would launch a new instance of explorer.exe and run the new window on it. While the underlying issue still remains (it requires implementing the DDE handler for explorer), by disabling the version of the desktop window from RShell and using the existing one from shell32 instead, the shell takes a shortcut and runs the window directly on its own instance.</description>
    </item>
    
    <item>
      <title>On installers</title>
      <link>https://costanzaltavilla.github.io/blogs/on-installers/</link>
      <pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/on-installers/</guid>
      <description>The ReactOS installer is probably one of the oldest extant chunks of code in ReactOS that has not undergone significant overhauls for a very long time. Besides some tuning by Alex Ionescu to reduce resource usage and adding initial support for removable devices by Cameron Gutman, it has not seen any real major changes since Eric Kohl put it together all those years ago. For the developers, this was not too much of an issue since the installer did its job perfectly fine for the most part.</description>
    </item>
    
    <item>
      <title>The Bar of the Tasks</title>
      <link>https://costanzaltavilla.github.io/blogs/the-bar-of-the-tasks/</link>
      <pubDate>Sun, 18 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/the-bar-of-the-tasks/</guid>
      <description>Hello! Another weekend is here, time for me to write a new report…
Good news! I’m recovered and back on track! ;P
The week started by doing some boring investigation on how Windows manages the addressbar. If you didn’t guess already, analysing the behaviour of COM(ATL) classes is anything but simple. Interface inheritance is good for encapsulation, but bad for about anything else, including debugging. I did manage to figure out that it has two functions related to filling the addressbar combobox: one of them resets the contents and fills them from scratch, and the other only adds/changes/removes items related to the navigation.</description>
    </item>
    
    <item>
      <title>Small Hickup</title>
      <link>https://costanzaltavilla.github.io/blogs/small-hickup/</link>
      <pubDate>Mon, 12 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/small-hickup/</guid>
      <description>Hello everyone!
This update will be rather short.
At the same time I was writing last week&#39;s post, I had already started to feel sore in my throat.
By Sunday evening, I had a slight fever, and by Monday it was obvious that I must have caught a flu.
I have been trying to poke around as I was recovering, but I couldn&#39;t really focus enough to do anything complex.</description>
    </item>
    
    <item>
      <title>Tweaks and improvements</title>
      <link>https://costanzaltavilla.github.io/blogs/tweaks-and-improvements/</link>
      <pubDate>Mon, 05 May 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/tweaks-and-improvements/</guid>
      <description>Sorry for the delay! Drupal was causing issues on submitting new things.
This week I continued what I was doing the previous one.
I focused my efforts in the browse window, tweaking the existing code, fixing logic issues and cleaning up the code a bit.
There were some visual differences that were easy to fix, and others that will require a lot of work.
I added some code to extract the icon and show it in the titlebar.</description>
    </item>
    
    <item>
      <title>Slowly getting closer...</title>
      <link>https://costanzaltavilla.github.io/blogs/slowly-getting-closer/</link>
      <pubDate>Mon, 28 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/slowly-getting-closer/</guid>
      <description>Another week is over, and it’s time for me to look back and convert all my efforts into words.
If you recall from the previous report, I was trying to fix the keyboard navigation. I managed to find and fix the issue that caused my code not to process the key presses correctly. With that issue fixed, I could implement the code to switch left and right between popup menus, and shell menus, both between a popup and a shell menu (which was already working last week), and between a shell menu and a popup.</description>
    </item>
    
    <item>
      <title>Menus and keyboard navigation</title>
      <link>https://costanzaltavilla.github.io/blogs/menus-and-keyboard-navigation/</link>
      <pubDate>Tue, 22 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/menus-and-keyboard-navigation/</guid>
      <description>Sorry for the delay.
This past week has been full of holidays and the inevitable family meetings, so the report will be short.
After spending some more time on the context menu bug, I decided to leave it aside, and focus on things that improve the progress. If the code is incompatible with TortoiseGit for some reason, I can figure that out later.
The next issue on the list was the keyboard navigation.</description>
    </item>
    
    <item>
      <title>At the peak of the mountain... there&#39;s a hill?</title>
      <link>https://costanzaltavilla.github.io/blogs/at-the-peak-of-the-mountain-theres-a-hill/</link>
      <pubDate>Tue, 15 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/at-the-peak-of-the-mountain-theres-a-hill/</guid>
      <description>This week really didn’t “start”; it was merely a continuation of the past weeks.
The issue where the toolbar did not receive clicks was one of those annoying problems where finding the apparent cause is easy, but finding a solution not so much. The issue, as far as I could tell, was related to using SetCapture as a means to track the mouse movement on top of the toolbar. If I disabled that piece of code, the clicks got through, but – of course – other features stopped working.</description>
    </item>
    
    <item>
      <title>Indiegogo software/hardware vote info</title>
      <link>https://costanzaltavilla.github.io/blogs/indiegogo-software-hardware-vote-info/</link>
      <pubDate>Mon, 07 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/indiegogo-software-hardware-vote-info/</guid>
      <description>So there&#39;s quite a few questions coming in about the campaign and its rewards. Questions are good, that means people are paying attention to us.
One of the most common ones is in regard to how to &#34;push&#34; one&#39;s desired hardware or software. Well, the FAQ provides a brief explanation and we&#39;ll expand upon it here. After the funding period is over, a series of votes will be held to whittle down candidates.</description>
    </item>
    
    <item>
      <title>The Sisyphean Bug -- part 2</title>
      <link>https://costanzaltavilla.github.io/blogs/the-sisyphean-bug-part-2/</link>
      <pubDate>Mon, 07 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/the-sisyphean-bug-part-2/</guid>
      <description>Over this past week, I continued fixing many small bugs, logic errors and such. Eventually I got to a point where I couldn’t deny the truth anymore.
One of the lessons you are taught when learning to be an engineer (including software programming), and one that some people find hard to accept, is that you should always try to reuse existing processes and components, instead of reinventing your own. Because of that, I tried very hard to let the toolbars manage their own hot-tracking and only intercept hot-tracking events when strictly necessary.</description>
    </item>
    
    <item>
      <title>The Sisyphussian Bug</title>
      <link>https://costanzaltavilla.github.io/blogs/the-sisyphussian-bug/</link>
      <pubDate>Sat, 29 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/the-sisyphussian-bug/</guid>
      <description>If you have been following the weekly reports, you know that I have been having issues with the focus manager.
Well, this week I redesigned part of the focus manager, improving the structure so that it has more accurate information of what’s happening with the menus. While improving the code, I also fixed some bugs in the code.
By Wednesday, I had what appeared to be working code. While running it in Windows 7, everything seemed to work, both in the start menu and the menu bar.</description>
    </item>
    
    <item>
      <title>Walking in circles</title>
      <link>https://costanzaltavilla.github.io/blogs/walking-in-circles/</link>
      <pubDate>Mon, 24 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/walking-in-circles/</guid>
      <description>When work progresses, there’s a natural tendency towards running out of simple bugs to fix, and being left with those persistent ones that seem to have an intelligence of their own.
I thought I was over those. That the bug I was working on would be a simple one.
I wanted to have some test builds ready to share with the world, to be able to tell you all “hey look, if you don’t try to navigate with the keyboard, everything mostly acts the way it should, come and try!</description>
    </item>
    
    <item>
      <title>Blog comments</title>
      <link>https://costanzaltavilla.github.io/blogs/blog-comments/</link>
      <pubDate>Thu, 20 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/blog-comments/</guid>
      <description>Due to the proliferating of spamming in the blog comments, we&#39;re going to disable it outright. For the future we&#39;ll link to a dedicated forum/thread for commenting on blog posts.</description>
    </item>
    
    <item>
      <title>Menus, menus</title>
      <link>https://costanzaltavilla.github.io/blogs/menus-menus/</link>
      <pubDate>Sun, 16 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/menus-menus/</guid>
      <description>I began the week by fixing the menus, so that they would properly display submenus, and react to clicks. I was stuck for a bit, but I finally managed to find the problem that prevented the menus from working correctly within ReactOS.
I set the filebrowser aside for a bit after this small success, to revisit some of the old bugs and pending tasks.
I took a fresher look at the exec issue, where items weren’t clickable unless a submenu had been opened first, and I (painfully) traced the issue to pointless/bogus WM_ACTIVATE messages, with the new HWND being equal to the old HWND.</description>
    </item>
    
    <item>
      <title>NTVDM progress</title>
      <link>https://costanzaltavilla.github.io/blogs/ntvdm-progress/</link>
      <pubDate>Thu, 13 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/ntvdm-progress/</guid>
      <description>A while back Aleksander Andrejevic began working on a NTVDM implementation for ReactOS to support 16bit programs. This was one of the more often requested features by the community, which was met with some ambivalence by the developers themsleves since it entailed a significant amount of work. Aleksander then appeared and instead of simply asking for the feature, rolled up his sleeve to do the actual work. Since then NTVDM has made significant progress and other developers like Hermès Bélusca-Maïto and community member Vampyre have joined in to help.</description>
    </item>
    
    <item>
      <title>ReactOS RShell</title>
      <link>https://costanzaltavilla.github.io/blogs/reactos-rshell/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/reactos-rshell/</guid>
      <description>I began the week by testing the progress of the start menu in ReactOS.
You may remember this screenshot from last weekend’s report. In it, you can see the results of implementing vertical menus in a different, more documented, way. This method requires more work to be done per item, to make them all wrap into a new row, but it is supported by the Wine toolbar implementation ReactOS uses.</description>
    </item>
    
    <item>
      <title>Look&amp;Feel of the Start Menu</title>
      <link>https://costanzaltavilla.github.io/blogs/look-feel-start-menu/</link>
      <pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/look-feel-start-menu/</guid>
      <description>This week’s work began by improving the look&amp;amp;feel of the start menu so that it matches the Windows start menu better.
The first step was to improve the look of the menu: This included positioning, colours, dropdown arrows, icon sizes, etc.
I continued by trying to improve the feel of the menu: Hot-tracking behaviours, keyboard navigation, etc. The keyboard navigation keeps resisting me somewhat, though, as it tends to glitch when using the left/right arrow keys to open and close submenus, but moving up and down seems to behave as expected.</description>
    </item>
    
    <item>
      <title>Regarding the motto proposal</title>
      <link>https://costanzaltavilla.github.io/blogs/regarding-motto-proposal/</link>
      <pubDate>Mon, 03 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/regarding-motto-proposal/</guid>
      <description>The ReactOS Project recently received a proposal to adopt &#34;Open your Windows to Freedom&#34; as the official project motto, with the proposed motto itself having been selected in a self-organized vote by the community. After internal discussions between the team developers and other administrative members, the Project has chosen to reject the proposal. The following outlines the reasons.
The overaching issue the team has with the proposal is the impression that &#34;</description>
    </item>
    
    <item>
      <title>The Starts and The Menus</title>
      <link>https://costanzaltavilla.github.io/blogs/the-starts-and-the-menus/</link>
      <pubDate>Sun, 23 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/the-starts-and-the-menus/</guid>
      <description>The week began by implementing the functionality needed to handle clicking on menu items. This involved sending a callback notification for the currently selected item, asking the callback to execute the appropriate action of the item.
Some of the items are not meant to be clicked on and are supposed to show a submenu instead. For these items I had to subclass the toolbar windows so that I could add a timer on hover and handle the opening of the submenu in the resulting WM_TIMER event, which would be received by the toolbar, but needed to be handled by my code.</description>
    </item>
    
    <item>
      <title>Shell experiments: Progress on the start menu</title>
      <link>https://costanzaltavilla.github.io/blogs/shell-experiments-progress-on-the-start-menu/</link>
      <pubDate>Sun, 16 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/shell-experiments-progress-on-the-start-menu/</guid>
      <description>Work, this week, began with finishing the initial implementation of CMenuSite. This class and the window it creates act as an intermediary between a BaseBar and a MenuBand, forwarding the events and messages either to the child band, or to the parent bar, as necessary. It handles the sizing of the child band, to adapt it to changes in the available space. It also provides certain services related to the positioning and sizing of the child bar, which it handles by forwarding some requests to the child, and the rest to the parent.</description>
    </item>
    
    <item>
      <title>On ARM</title>
      <link>https://costanzaltavilla.github.io/blogs/on-arm/</link>
      <pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/on-arm/</guid>
      <description>A lot of people have expressed excitement or enthusiasm regarding ARM though when asked to explain their enthusiasm the result has often been incoherent babbling. In other words, the vast majority of people still have trouble communicating their thoughts in a clear and, more importantly, concise, manner. ARM is interesting though and from multiple perspectives. The biggest point is the amount of processing power it represents despite its small physical, power, and thermal footprint.</description>
    </item>
    
    <item>
      <title>Proper?! Windows explorer.exe implementation</title>
      <link>https://costanzaltavilla.github.io/blogs/proper-windows-explorer-exe-implementation/</link>
      <pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/proper-windows-explorer-exe-implementation/</guid>
      <description>&#34;A picture is worth a thousand words&#34;
Thanks Giannis for this awesome work</description>
    </item>
    
    <item>
      <title>Anonymous spread word of ReactOS Kickstarter</title>
      <link>https://costanzaltavilla.github.io/blogs/anonymous-spread-word-reactos-kickstarter/</link>
      <pubDate>Mon, 10 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/anonymous-spread-word-reactos-kickstarter/</guid>
      <description>An interesting tidbit.
First because the motto seems to be real: &#34;We are All. We are everywhere&#34;.&amp;nbsp; Second, because they have just twitted the following::
&amp;nbsp;
As you may know, ReactOS began a Kickstarter campaign to create a business product to help supporting and boosting current ReactOS development.
What is it about?

Thorium Core is about taking the ReactOS operating system from the proof-of-concept and engineering stages to building a fast and lightweight solution that can be tailored to suit the computing needs of both private and commercial users.</description>
    </item>
    
    <item>
      <title>Drag&amp;Drop and Improved interactions.</title>
      <link>https://costanzaltavilla.github.io/blogs/drag-drop-improved-interactions/</link>
      <pubDate>Sat, 08 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/drag-drop-improved-interactions/</guid>
      <description>One of the main issues people trying out ReactOS have complained about is the clunkiness of the shell and how things they expect to work don&#39;t. As the shell serves as the main gateway to using the operating system, if it is hard to use then the OS itself becomes hard to use.
When talking about &#34;interaction&#34; we can think in two different ways of interaction: The interaction between the user and ReactOS Explorer and the interaction between applications and ReactOS Explorer(well, really the Shell).</description>
    </item>
    
    <item>
      <title>Contributions: MS Office 2003</title>
      <link>https://costanzaltavilla.github.io/blogs/contributions-ms-office-2003/</link>
      <pubDate>Fri, 31 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/contributions-ms-office-2003/</guid>
      <description>This time a double-win.
Not so long ago trying to run a whole office suite was almost a dream. Just launching an app was a success.There was just one complex suite almost working: &#34;SoftMaker Office 2008&#34;. A nice, and mostly unknown, Microsoft Office clone. It was such a good Office clone that it is closed and non-free.
From past experience you can find two kind of users out there: &#34;Pro-open source&#34;</description>
    </item>
    
    <item>
      <title>Contributions: TeamSpeaker!</title>
      <link>https://costanzaltavilla.github.io/blogs/contributions-teamspeaker/</link>
      <pubDate>Fri, 31 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/contributions-teamspeaker/</guid>
      <description>&amp;nbsp;
After opening the totally unofficial, irrelevant, NôÓbsletter section, now it&#39;s time to open a new serious section oriented and opened to the Community. Because, as you may know, an opensource project has sense thanks because its supporting Community behind it.
Welcome to this awesome, yours, &#34;Contribution&#34; section.
From time to time astonishing content is created by the Community and shared through IRC or Forum. It&#39;s a pity that such content keeps moving just in the inner circle.</description>
    </item>
    
    <item>
      <title>Todo list: ReactOS edition</title>
      <link>https://costanzaltavilla.github.io/blogs/todo-list-reactos-edition/</link>
      <pubDate>Tue, 28 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/todo-list-reactos-edition/</guid>
      <description>So there is this tendency amongst the community to ask why the project doesn&#39;t do this or the project doesn&#39;t do that. A lot of the stuff people want done would tend to fall into my area of responsibility. I tend to frown upon people who make more work for me so I often push back, hard, requiring that others demonstrate their willingness to do some heavy lifting before I will consider a proposal.</description>
    </item>
    
    <item>
      <title>The shell</title>
      <link>https://costanzaltavilla.github.io/blogs/the-shell/</link>
      <pubDate>Wed, 22 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/the-shell/</guid>
      <description>A part of me feels a tad guilty testing all of you with promises regarding shell progress. Another part of me feels no guilt whatsoever and I tend to listen to that part more. It helps having no conscience when doing PR, I have found.
Anyway, recently I started doing the prep work needed for a new release of ReactOS, which will be 0.3.16 despite the constant badgering for me to just go ahead and call the next release 0.</description>
    </item>
    
    <item>
      <title>Thorium: On the embedded use case</title>
      <link>https://costanzaltavilla.github.io/blogs/thorium-embedded-use-case/</link>
      <pubDate>Tue, 14 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/thorium-embedded-use-case/</guid>
      <description>When people think about &#34;embedded&#34; systems, they often think about ARM systems running Linux. Well, that&#39;s one part of the embedded world, but another big chunk is actually x86 systems running Windows. For that matter, one of the biggest reasons for someone to use x86 in an embedded application is to get the ability to run Windows applications. There are a LOT of point-of-sale and other dumb terminals out there that run Windows due to the widespread availability of a Windows application to do damn near anything.</description>
    </item>
    
    <item>
      <title>Response to Thorium questions</title>
      <link>https://costanzaltavilla.github.io/blogs/response-to-thorium-questions/</link>
      <pubDate>Mon, 06 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/response-to-thorium-questions/</guid>
      <description>Quite a few people that first look at Thorium ask questions about what exactly it is for and what purpose does it serve. These are not unreasonable questions to ask and the answers are sometimes difficult to parse due to the complexity of Thorium itself. The second set of questions relates to why we believe Thorium is achievable with the amount of funding requested. Let&#39;s go over both sets and hopefully they will convince you we aren&#39;t completely out of our minds.</description>
    </item>
    
    <item>
      <title>Monstera</title>
      <link>https://costanzaltavilla.github.io/blogs/monstera/</link>
      <pubDate>Sun, 05 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/monstera/</guid>
      <description>This post really should have been made months ago, but finding the time to write a full blown newsletter has been getting more and more scarce. That being said, I&#39;ve decided for the short term to split things that would normally act as a single newsletter section into separate blog posts so I don&#39;t need to wait and gather things.
There was a lot of speculation as to what Monstera was when Aleksey made his commit with some suggesting it is a repeat of his ARWINSS effort but targetted at the memory manager.</description>
    </item>
    
    <item>
      <title>Intellectual Property: Ideology vs Practicality</title>
      <link>https://costanzaltavilla.github.io/blogs/intellectual-property-ideology-vs-practicality/</link>
      <pubDate>Sat, 14 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/intellectual-property-ideology-vs-practicality/</guid>
      <description>The thing that people need to keep in mind when discussing the GPL is that it was created to achieve an ideological and political goal, namely that users of software should have the right to modify and extend the software as they see fit. To achieve this goal, the GPL seeks to ensure that the source code is always available and that reusing the source code in question comes without any restrictions save for what the GPL itself imposes in order to ensure this &#34;</description>
    </item>
    
    <item>
      <title>NôÓbsletters: Moar games!Moar compatibility!</title>
      <link>https://costanzaltavilla.github.io/blogs/moar-games-moar-compatibility/</link>
      <pubDate>Wed, 20 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/moar-games-moar-compatibility/</guid>
      <description>Well, let&#39;s face it! Users love Games. Me too.
I still have some really great childhood memories, playing with those lovely old games.
Do you remember trying to save the poor Lemmings? Damn, they do seem predestined to fall!&amp;nbsp;
Or what about XWing? And Dangerous Dave (a blatant game copy of&amp;nbsp; inspired by Super Mario)? I still have nightmares with the Aliens from X-COM every once in a while !</description>
    </item>
    
    <item>
      <title>Intellectual Property: Fundamentals</title>
      <link>https://costanzaltavilla.github.io/blogs/intellectual-property-fundamentals/</link>
      <pubDate>Fri, 15 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/intellectual-property-fundamentals/</guid>
      <description>Intellectual property is something way too many people like to talk about without actually understanding the nuances of the laws supporting them. While I could easily go on and on about these misconceptions, I&#39;ll focus primarily on those that relate to free software and open source, of which there are plenty. Some of the more prominent ones include incorrectly claiming what is and what is not a GNU Public License (GPL) violation and the notion that companies should &#34;</description>
    </item>
    
    <item>
      <title>Newsletter 99</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-99/</link>
      <pubDate>Mon, 09 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-99/</guid>
      <description>ShellSince the last newsletter Giannis Adamopoulos has completed his development contract and while a more formal report will be published later, a brief summary follows. The fruits of his labor are already visible in that explorer_new can actually start in ReactOS and allow a user to browse the directories. Much of this was achieved by completing work Andrew Hill started. Giannis also spent considerable amounts of time trying to understand how the various menus in the shell worked.</description>
    </item>
    
    <item>
      <title>Newsletter 98</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-98/</link>
      <pubDate>Wed, 07 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-98/</guid>
      <description>Explorer Shell A while back the project announced a development contract for Giannis Adamopoulos to work on getting the necessary supports for running explorer-new to run on ReactOS. Since then, Giannis has been very busy and has made considerable progress. Much of his work has been properly separating responsibilities in the various components so that there are clear delineations of who does what.
There are two major accomplishments, both fairly wide in scope.</description>
    </item>
    
    <item>
      <title>Newsletter 97</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-97/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-97/</guid>
      <description>C++ One of the last big missing pieces of building ReactOS using Visual Studio was support for C++. In ReactOS, the biggest piece of C++ code is explorer, without which users have no graphical shell when ReactOS boots up. Support for C++ requires not just a compiler capable of building C++ code, but also the presence of the standard template library. For developers where C++ was their first language, usage of the STL is fairly common and it is almost guaranteed to be linked in by default regardless of whether it is used or not.</description>
    </item>
    
    <item>
      <title>PITA bugs part 3</title>
      <link>https://costanzaltavilla.github.io/blogs/pita-bugs-part-3/</link>
      <pubDate>Wed, 26 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/pita-bugs-part-3/</guid>
      <description>It is somewhat difficult to put into words just how much hate I have for this particular issue. Debugging it ended up taking an entire week and the result surprised pretty much everyone on the team, including the senior developers. The issue that was highlighted however has very deep root causes that touch upon the very foundation of the C ABI and its brittleness.
First, a slight aside. In C, there is a family of functions that take in a variable number of arguments, the printf functions.</description>
    </item>
    
    <item>
      <title>PITA bugs part 2</title>
      <link>https://costanzaltavilla.github.io/blogs/pita-bugs-part-2/</link>
      <pubDate>Sat, 15 Jun 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/pita-bugs-part-2/</guid>
      <description>Weclome to the second part of the series where I discuss bugs that were truly irritating to debug. In general, fixing a bug is usually simple. Finding the bug is where the actual work is involved.
As I mentioned before, I currently work as an intern at a company that does development work on a UEFI BIOS. BIOS development is difficult because we are often so close to the hardware that we often do not have the convenience of things like a debugger.</description>
    </item>
    
    <item>
      <title>On desktops</title>
      <link>https://costanzaltavilla.github.io/blogs/on-desktops/</link>
      <pubDate>Fri, 31 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/on-desktops/</guid>
      <description>In the recent craze over smartphones, tablets, and what I&amp;#39;ll term webbooks (think ChromeOS machines), many companies seem to have forgotten the greatest achievement of modern desktop operating systems, namely the ability to multitask. Smartphone OSes originally either did not have this capability built in or did not expose it to the end user. This was understandable, as smartphones operate under different constraints with respect to power and screen space. Even tablets, with their higher power envelopes and bigger screens, are ultimately presented as consumption devices.</description>
    </item>
    
    <item>
      <title>Use cases for ReactOS</title>
      <link>https://costanzaltavilla.github.io/blogs/use-cases-for-reactos/</link>
      <pubDate>Sun, 26 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/use-cases-for-reactos/</guid>
      <description>Many people see ReactOS as a Windows XP successor, a way for them to avoid the changes Microsoft brought about in Windows 8. This is a somewhat idealized goal, as ReactOS would need to be much more complete before it could attempt to fill in that role. There are however other use cases for which ReactOS is much closer to being ready for. Many of these however are more business use cases than consumer use cases.</description>
    </item>
    
    <item>
      <title>A perspective: Games vs Microsoft</title>
      <link>https://costanzaltavilla.github.io/blogs/perspective-games-vs-microsoft/</link>
      <pubDate>Fri, 24 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/perspective-games-vs-microsoft/</guid>
      <description>Deciding whether to write this latest entry was a tad difficult, if only because I&amp;#39;m starting to feel like I&amp;#39;ve been harping a bit too much on Microsoft, but some of the information that has trickled out about the new Xbox bears some putting into context. Specifically, the requirement that anyone wanting to publish a game to Xbox Live needs to sign on with a publisher, so no self-publishing by indies.</description>
    </item>
    
    <item>
      <title>The cost of progress</title>
      <link>https://costanzaltavilla.github.io/blogs/the-cost-of-progress/</link>
      <pubDate>Tue, 21 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/the-cost-of-progress/</guid>
      <description>The project often gets suggestions for what people consider to be &amp;quot;improvements&amp;quot; over how Windows does something. Nothing wrong with that, save for the fact people rarely consider the implications of what they are asking for. The most recent spurt was in &amp;quot;enhancements&amp;quot; for the shell, some of it due to the renewed attention I started drawing to it. We&amp;#39;ll take the request for &amp;quot;full screen&amp;quot; application support to start with.</description>
    </item>
    
    <item>
      <title>Newsletter 96</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-96/</link>
      <pubDate>Thu, 16 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-96/</guid>
      <description>Testing and Debugging The hardest thing about writing software is finding the source of bugs. Good testers are as such extremely valuable, and those able to use debuggers well even more so. Two issues were recently dealt with thanks to one such tester, Olaf Siejka.
The first issue involved Microsoft Excel Viewer, an application that as its name suggests allows for viewing of spreadsheets but not editing. Word Viewer actually worked in ReactOS, and Excel Viewer&amp;#39;s failure drew Olaf&amp;#39;s attention.</description>
    </item>
    
    <item>
      <title>A perspective: managed developers beyond Microsoft</title>
      <link>https://costanzaltavilla.github.io/blogs/perspective-managed-developers-beyond-microsoft/</link>
      <pubDate>Sun, 12 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/perspective-managed-developers-beyond-microsoft/</guid>
      <description>In my last post, I talked a bit about how Microsoft&amp;#39;s fixation on Metro/Modern and the appstore had resulted in it basically ignoring large swathes of its developer community. So that post got a lot more attention than I was expecting, with some agreeing and others disagreeing. Some discussions however took a turn where people began debating how much trouble, if any, developers were in with Microsoft&amp;#39;s move. This was something that I had decided not to explore further because the previous post had already reached a fairly ridiculous length.</description>
    </item>
    
    <item>
      <title>A perspective: developers vs Microsoft</title>
      <link>https://costanzaltavilla.github.io/blogs/perspective-developers-vs-microsoft/</link>
      <pubDate>Sat, 11 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/perspective-developers-vs-microsoft/</guid>
      <description>Most people understand that Windows is used by a variety of people who have a variety of needs, ranging from corporate server to workstation to POS terminals to home PC and beyond. Most people accept that whenever Microsoft updates Windows, it has to balance the competing requirements to find some kind of workable compromise. There is however another set of competing requirements that many do not really register, even those that call themselves power users or are IT admins.</description>
    </item>
    
    <item>
      <title>PITA bugs part 1</title>
      <link>https://costanzaltavilla.github.io/blogs/pita-bugs-part-1/</link>
      <pubDate>Mon, 06 May 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/pita-bugs-part-1/</guid>
      <description>In my years working as a programmer, I have run into many, many bugs and introduced many of my own. A few stand out as tremendously irritating to debug, as their behavior made little sense and the source of the bug was non-obvious. The first issue was from my work for the HTCondor Project, an open source cluster management software used by research groups around the world including those working on crunching data from the Large Hadron Collider, the LIGO graviton detector, and the IceCube neutrino observatory.</description>
    </item>
    
    <item>
      <title>An introduction</title>
      <link>https://costanzaltavilla.github.io/blogs/introduction/</link>
      <pubDate>Mon, 29 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/introduction/</guid>
      <description>Despite my involvement with the project for several years, I do not believe I have ever actually introduced myself. While the developers and a few other members of the community know about me, in general the rest of the community knows me as the guy that writes the newsletters and sometimes posts snarky comments on the forum whenever I see something that I think is a bad idea. As such, this might be a good time to introduce myself and provide some background.</description>
    </item>
    
    <item>
      <title>Newsletter 95</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-95/</link>
      <pubDate>Thu, 11 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-95/</guid>
      <description>OpenGL The ReactOS project has relied on the Mesa Project for OpenGL 3D graphics for a long time, but unfortunately the code needed by ReactOS is no longer maintained by Mesa. Actual rendering involves a chain of components, one of which is the called the installable client driver. The ICD is for the most part bundled with the graphics card driver, though it can also be a driver that performs rendering completely in software.</description>
    </item>
    
    <item>
      <title>Newsletter 94</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-94/</link>
      <pubDate>Wed, 27 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-94/</guid>
      <description>Site Migration The project recently migrated from its old site to one using the Drupal content management system. Work on this migration had been going on in some form for the last year, with a major milestone being the migration from Bugzilla to JIRA. The migration of the site proper however was nowhere as smooth as many people, including myself, desired. One of the root causes for the bumpy migration was my fault actually, when I sent an email claiming that the site&#39;s content was at a state where it should not be a blocker to migration.</description>
    </item>
    
    <item>
      <title>Newsletter 93</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-93/</link>
      <pubDate>Fri, 19 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-93/</guid>
      <description>Desktops and Windows In the Windows operating system, the desktop one sees is made up of three things, a kernel mode desktop object, a user mode desktop window, and a desktop thread. While the desktop object can be considered almost mundane, the window and thread are somewhat special. In Windows, desktop windows are created differently from regular windows and all share a single desktop thread. This thread handles messages sent to the desktop window, though users will generally only see the desktop window if the explorer shell is not running.</description>
    </item>
    
    <item>
      <title>Newsletter 92</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-92/</link>
      <pubDate>Mon, 21 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-92/</guid>
      <description>Win32 Improvements Deep within GDI is code designed to carry out a series of raster operations that involve applying patterns to bitmaps. For performance reasons, it is desirable to have optimized versions of this code for the various bit depths. Formally, ReactOS only generated these optimized versions for the few ternary raster operations that were used often enough to be given a common name by Microsoft. The rest were handled in a single unoptimized version.</description>
    </item>
    
    <item>
      <title>Newsletter 91</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-91/</link>
      <pubDate>Wed, 29 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-91/</guid>
      <description>Session Manager Subsystem Rewrite The session manager subsystem is responsible for initializing much of the operating system environment and starting up services and processes needed to get a user to the login screen. Specifically, it creates the environment variables inherited by other processes, loads the Win32 subsystem, sets up the pagefiles for virtual memory, and finally starts up the winlogon.exe process, amongst other things. The implementation that was in ReactOS took many shortcuts in how it communicated with subsystem components, which in turn led to those components not correctly implementing the interfaces SMSS was supposed to use.</description>
    </item>
    
    <item>
      <title>Newsletter 90</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-90/</link>
      <pubDate>Tue, 24 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-90/</guid>
      <description>Wireless Cameron Gutman has spent the last month or so adding the pieces needed to support wireless network cards to ReactOS. A good portion of the work entailed writing the NDIS protocol driver (ndisuio) that handles sending wireless NDIS object identifier (OID) messages. These messages handle querying network drivers about their status and capabilities and also set the receiving mode the device should operate in. In addition to the kernel side, a user mode utility is needed to let end users actually make these requests.</description>
    </item>
    
    <item>
      <title>Newsletter 89</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-89/</link>
      <pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-89/</guid>
      <description>RPC Remote procedure calls underline a lot of things in Windows, especially services. Thus the Remote Procedure Call Runtime (rpcrt4) library is fairly important to the continued operation and stability of ReactOS. It is also a component in which the project is heavily reliant on Wine for. Unfortunately, just because Wine code works on Linux does not mean it will work on ReactOS, and attempts to sync rpcrt4 in the past have produced monumental headaches, breakages, and difficulties in ReactOS.</description>
    </item>
    
    <item>
      <title>Newsletter 88</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-88/</link>
      <pubDate>Thu, 13 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-88/</guid>
      <description>Shell32 Another recent accomplishment by Claudiu Mihail, the Google Summer of Code responsible for transforming the lwIP library into a driver, was the completion and remerging of the shell32 library as C++ code instead of C code. The effort was started originally by Ged Murphy and Andrew Hill as C++ was better suited to implementing the COM aspects of the library. Ged had originally tried to do the conversion in trunk, but that proved too disruptive and he moved the code into a branch.</description>
    </item>
    
    <item>
      <title>Newsletter 87</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-87/</link>
      <pubDate>Tue, 30 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-87/</guid>
      <description>Google Summer of Code Progress Of the six projects ReactOS entered as part of the Google Summer of Code, four are well on track to completion. Each of the completed projects will greatly help increase ReactOS&#39; usability and provide a foundation for future enhancement. Many of the successful projects will help make ReactOS more usable from both a stability and UI perspective. The deadline for final submissions is already over and the project and Google are currently evaluating students.</description>
    </item>
    
    <item>
      <title>Newsletter 86</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-86/</link>
      <pubDate>Tue, 26 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-86/</guid>
      <description>MSVC Progress The entirety of ReactOS can now be built using Microsoft&#39;s compiler, but running the resulting operating system is still a ways off. &amp;nbsp;Timo Kreuzer has already squashed several bugs that arose, one such being corruption of filesystem metadata that caused the loading of freeldr to fail. On x86/x64 platforms, part of the booting process involves the bootsector loading in the FAT table from disk, which needs to be loaded in a high enough address that reading freeldr into memory afterward would not overwrite the table.</description>
    </item>
    
    <item>
      <title>Newsletter 85</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-85/</link>
      <pubDate>Mon, 20 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-85/</guid>
      <description>Theme Support Giannis has completed support for drawing in most non-client areas of a window such as captions, borders, and scrollbars. Scrollbars turned out to be especially problematic as the code that handles calculations of how much to scroll is also responsible for redrawing the changes. This has the very unfortunate consequence of duplicating a significant amount of drawing code inside the scrolling update function. Maintenance of this code will likely be troublesome due to this, but currently Giannis is not aware of a way around the problem.</description>
    </item>
    
    <item>
      <title>Newsletter 84</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-84/</link>
      <pubDate>Sun, 15 May 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-84/</guid>
      <description>Loader Rewrite When an application has external dependencies that are in DLLs, a loader is responsible for loading and initializing them. The implementation in ReactOS is very, very old and like many such instances of ancient code incorrect. It worked after a fashion but took many shortcuts. There are matters such as initialization of the Thread Local Storage, calling the DllMain of a specific DLL, and loading of DLLs in the correct order based on interdependencies or even circular dependencies.</description>
    </item>
    
    <item>
      <title>Newsletter 83</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-83/</link>
      <pubDate>Fri, 29 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-83/</guid>
      <description>GDI Memory Usage As part of his work rewriting the Graphics Device Interface (GDI) handle manager, Timo Kreuzer ran across what can only be described as an atrocious waste of memory. The memory allocation granularity for when objects were created was an entire page, 4KB, regardless of whether an object needed that much space to store its attributes. This thus wastes a considerable amount of memory and also eats up memory addresses.</description>
    </item>
    
    <item>
      <title>Newsletter 82</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-82/</link>
      <pubDate>Sat, 09 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-82/</guid>
      <description>NewCC Status A while back Art Yerkes merged in a significant part of his new common cache implementation into trunk. This merge was intended to lay the foundation for the eventual replacement of the current common cache, which will happen once Art clears up some inconsistencies in how the sections data structure is treated by the memory manager and the common cache. Sections management is the responsibility of the memory manager but provide functionality the common cache relies on.</description>
    </item>
    
    <item>
      <title>Newsletter 81</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-81/</link>
      <pubDate>Mon, 14 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-81/</guid>
      <description>C++ Mangling Those with any experience using third party libraries while writing C++ applications should quickly recognize the topic I am about to go over and can skip down to paragraph three for the ReactOS specific miseries. Those that are not familiar with the issues or want a refresher should continue. The C++ standard outlines behavior for C++ code when compiled. To be considered a compliant compiler requires following the specifications laid out, though no compiler that I am aware of actually implements 100% of the entire standard.</description>
    </item>
    
    <item>
      <title>Newsletter 80</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-80/</link>
      <pubDate>Thu, 03 Feb 2011 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-80/</guid>
      <description>Component Testing As more components relating to filesystems sees implementation in ReactOS, they need to be tested. Pierre Schweitzer decided to try using Microsoft&#39;s FASTFAT driver to help in the effort, as using it successfully in ReactOS would indicate development is on the right track. Unfortunately, ReactOS&#39; current common cache implementation effectively blocks that attempt due to its sorry state. The common cache has been touched upon in the past and mention was made of its problems.</description>
    </item>
    
    <item>
      <title>Newsletter 79</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-79/</link>
      <pubDate>Sat, 25 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-79/</guid>
      <description>The ReactOS team would like to wish everyone a merry Christmas and a happy New Year.
Coverity Redux The ReactOS team recently ran another Coverity scan on the source code. While a few new issues were discovered thanks to enhancements to Coverity&#39;s analysis program, the vast majority of issues fell into two categories; false positives due to the way the Portable Structured Exception Handling (PSEH) library is implemented and used, and warnings from third party code not developed by this project.</description>
    </item>
    
    <item>
      <title>Newsletter 78</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-78/</link>
      <pubDate>Tue, 23 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-78/</guid>
      <description>Sound Stack
 The sound stack on Windows has a fairly clearcut layout, but the explanation provided in issue 65 of the newsletter was very brief and likely confusing so a more complete explanation follows. The sound card on a computer deals with two types of lines, source and destination. Source lines are effectively inputs from various things like the CD-ROM, microphone, or the like. Destination lines are ouputs from the card to speakers, headphones, and such.</description>
    </item>
    
    <item>
      <title>Newsletter 77</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-77/</link>
      <pubDate>Wed, 27 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-77/</guid>
      <description>0.3.12 As one can see from the front page, 0.3.12 has been released into the wild. In many ways 0.3.12 provides more a transitional view of ReactOS development than presenting loads and loads of new features or functionality. The 10 months between it and 0.3.11 provided a long window in which developers could drop in new features. Unfortunately many of them promised to be extremely disruptive and the decision was made to disable the full functionality of several before shipping.</description>
    </item>
    
    <item>
      <title>Newsletter 76</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-76/</link>
      <pubDate>Wed, 08 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-76/</guid>
      <description>Hunting Dangling Pointers
 There has always been a suspicion and concern amongst the ReactOS developers that there are points of sloppiness in ReactOS with respect to memory management. These can be fairly innocuous when at the user mode level, but in kernel mode can lead to data corruption and other problems. Cameron Gutman, Timo Kreuzer, and Michael Martin have just managed to find and fix what was perhaps the most serious of these suspected leaks.</description>
    </item>
    
    <item>
      <title>Newsletter 75</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-75/</link>
      <pubDate>Sat, 07 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-75/</guid>
      <description>Starcraft 2 came out. Enough said.
Bitmap Drawing Bitmaps are more or less the primary medium through which the Win32 subsystem draws things. However, the term refers to more than just the widely used format for images and the like. That format is generally considered a device independent bitmap (DIB). With a device independent version there of course exists a device dependent one, which is the format that a particular graphics device supports for drawing.</description>
    </item>
    
    <item>
      <title>Newsletter 74</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-74/</link>
      <pubDate>Fri, 09 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-74/</guid>
      <description>General Developments Amine Khaldi&#39;s effort in getting the driver headers cleaned up is starting to show results. Not only are a good portion of the driver headers sorted out, the necessary checks have been added to allow the headers to be used in both MSVC and GCC. Anyone who has had to write cross platform code will know that the two compilers have subtle differences at times in their allowed syntax so producing code that works with both can get nontrivial quickly.</description>
    </item>
    
    <item>
      <title>Newsletter 73</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-73/</link>
      <pubDate>Wed, 23 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-73/</guid>
      <description>A word of advice to everyone, traveling through six different cities in the span of two weeks requires a careful balance between changes of clothes brought and lightness of luggage, though a willingness to hand wash will also go a long way.
Timers and Messages Several years back when I first joined the ReactOS team as a release engineer, which I technically still am, the team ran into an odd bug where when downloading something in Firefox they needed to move the mouse to see any progress.</description>
    </item>
    
    <item>
      <title>Newsletter 72</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-72/</link>
      <pubDate>Sat, 15 May 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-72/</guid>
      <description>Just a heads up, I&#39;m out of the country for the next two months and will have unreliable net access, so do not expect any newsletters until late July.
General Developments A few weeks back Aleksey Bragin directed the developers to take a look at a long list of regressions that had accumulated. Individually the problems were for the most part minor, though a few were near show stoppers. However, cumulatively they represented a major perception problem in ReactOS&#39; progress.</description>
    </item>
    
    <item>
      <title>Newsletter 71</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-71/</link>
      <pubDate>Fri, 23 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-71/</guid>
      <description>NT USB Stack Pre-Vista, the USB architecture started with a very low level usbport driver. This driver was the one that created device objects for each USB controller and received I/O Request Packets (IRP). Depending on which USB standard the controllers were for, usbport would call into one of three helper drivers, usbehci, usbohci, and usbuhci. The one actually sending those IRPs was usbhub, and these components constitute the lower levels of the USB stack.</description>
    </item>
    
    <item>
      <title>Newsletter 70</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-70/</link>
      <pubDate>Thu, 01 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-70/</guid>
      <description>UniATA Timing UniATA continues to be problematic, with testers often struggling to get past the first stage install much less actually put ReactOS through its paces. As mentioned before, the time UniATA waits for responses from hardware is considerably lower than that of the old ATA driver. On older hardware, sometimes various drives are not fast enough in responding so operations time out and UniATA reports an error even when there technically was nothing wrong.</description>
    </item>
    
    <item>
      <title>Newsletter 69</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-69/</link>
      <pubDate>Wed, 03 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-69/</guid>
      <description>Trap Handling One of the ways low level communication with hardware is handled is with interrupts and exceptions. Code still has to be written to deal with these and that code is in the trap handler. The original trap handler code in ReactOS was pure assembly, which to an extent is inevitable due to the very needing to carry out operations that the C language does not specify a method for.</description>
    </item>
    
    <item>
      <title>Newsletter 68</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-68/</link>
      <pubDate>Fri, 22 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-68/</guid>
      <description>ARWINSS, Third Time&#39;s the Charm, Maybe There has been increasing speculation on what ARWINSS is, on what it is for, and on what it does, despite several statements released by Aleksey Bragin. The speculation has reached the point where people with incomplete information are making assertions as if they were fact when often their assertions are incorrect. ARWINSS is not intended to &#39;replace&#39; the current Win32 subsystem. It exists as a parallel effort to overcome the limitations in the current Win32 subsystem by applying a different design instead of duplicating the one in Windows NT.</description>
    </item>
    
    <item>
      <title>Newsletter 67</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-67/</link>
      <pubDate>Thu, 12 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-67/</guid>
      <description>Debugging The last time WinDBG support was discussed up was nearly a year ago. The first step needed was a kernel compatible with WinDBG, which was achieved by the kernel rewrite that mostly concluded two years ago. The required features mostly revolved around dealing with an executing thread&#39;s context and reading virtual memory. While the kernel rewrite made these possible, a few bugs prevented their usage. Debugging requires interrupting the executing thread&#39;s flow but also restoring it to allow the program to continue.</description>
    </item>
    
    <item>
      <title>Newsletter 66</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-66/</link>
      <pubDate>Sat, 31 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-66/</guid>
      <description>FAT
 A short while ago the FullFAT library was mentioned on the ReactOS forum and then brought to the attention of the developers by IRC regulars. Written by James Walmsley, it is a platform independent library for accessing FAT12/16/32 partitions and it was suggested that a new IFS driver could be written using it. The current FAT driver was written against an older, less NT compliant kernel and was never extensively tested on Windows to begin with.</description>
    </item>
    
    <item>
      <title>Newsletter 65</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-65/</link>
      <pubDate>Sun, 11 Oct 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-65/</guid>
      <description>Disks and Partitions One of the non-cross platform aspects of ReactOS was in how the bootloader dealt with disks and partitions. The naming scheme used was very x86 centric and also was limited in which partitions it could access. Herv&amp;eacute; Poussineau started working on a new API to remove the limitations, one based on names instead of drive numbers. Previously on platforms like PPC and ARM, developers would have needed to give numbers to each storage device they wanted to use.</description>
    </item>
    
    <item>
      <title>Newsletter 64</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-64/</link>
      <pubDate>Wed, 16 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-64/</guid>
      <description>Color and Filling Colored cursors aren&#39;t a feature used that often by regular applications, but games certainly make use of it and Winamp is a non-game example. When using Winamp, Gregor Schneider noticed the mouse turned into a black box when he tried to use it and dug into the code to see if he could fix it. In several places were comments noting the need for color support so Gregor had a few hints about where additional code was needed.</description>
    </item>
    
    <item>
      <title>Newsletter 63</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-63/</link>
      <pubDate>Sat, 01 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-63/</guid>
      <description>Test Disruptions For several days the automated testing suite that runs every ReactOS revision got stuck in an infinite loop once it reached the msi_winetest. Several people following the testing noticed this issue and suggested possible causes but Jeffrey Morlan eventually committed a patch that seems to resolve it. The problem appeared to be in the LoadLibraryExW function, in a specific case where the LOAD_LIBRARY_AS_DATAFILE flag was set. The function received as one of its inputs DllName, the name of the library it was being asked to load.</description>
    </item>
    
    <item>
      <title>Newsletter 62</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-62/</link>
      <pubDate>Tue, 21 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-62/</guid>
      <description>PSEH Corruption In NT operating systems, structured exception handling is used to help safeguard probing of user mode memory buffers and pageable memory while in kernel mode. This requirement was what motivated the creation of the PSEH library by KJK::Hyperion since GCC does not have support for it. Since the last attempt to add SEH support to GCC failed, ReactOS remains dependent on PSEH. Recently, the ARM team committed some code which exposed a very nasty bug in the PSEH library and investigation of the issue led KJK to discover another bug while analyzing the code.</description>
    </item>
    
    <item>
      <title>Newsletter 61</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-61/</link>
      <pubDate>Tue, 30 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-61/</guid>
      <description>0.3.10 Preparations  Effort is underway to get the 0.3.10 release out the door. Testers have been going through the usual list of applications to find any regressions and several have popped up. An especially nasty one was a seemingly random data corruption in the Download application, eventually traced back to an update in wininet from Wine. As the developers were unable to pinpoint the exact cause, Cameron Gutman simply reverted the entire code synchronization.</description>
    </item>
    
    <item>
      <title>Newsletter 60</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-60/</link>
      <pubDate>Fri, 12 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-60/</guid>
      <description>RBuild and MSVC  Getting ReactOS built using Microsoft&amp;#39;s compilers has been on the wishlist of several ReactOS developers, but no one really wanted to deal with the monstrosity that RBuild had transformed into. KJK::Hyperion decided his sanity was sufficient enough to survive the experience and has been working for quite some time to get it to be able to use a compiler that is not GCC. So far, his additions allow RBuild to detect the presence of the VC++ compiler, whether you got it through Visual Studio, one of the SDKs, or the WDK.</description>
    </item>
    
    <item>
      <title>Newsletter 59</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-59/</link>
      <pubDate>Thu, 04 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-59/</guid>
      <description>ReactOS Foundation   The ReactOS Foundation is the entity that handles the legal affairs of the project and owns the trademarks and logos associated with the ReactOS Project. The Foundation itself has been established for a few years now and is based in Moscow, but two recent developments have helped increase its legitimacy in a broader perspective. The first was the approval of ReactOS as a registered trademark owned by the Foundation in Russia.</description>
    </item>
    
    <item>
      <title>Newsletter 58</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-58/</link>
      <pubDate>Sat, 16 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-58/</guid>
      <description>UniATA  The Universal ATA driver has often been pointed out as a way to solve some rather annoying issues in ReactOS, such as the lack of support for SATA and limiting the amount of space ROS sees to about 8GB. Since both issues border on the outright absurd in this day and age, fixing them was of very high priority. A few showstoppers stood in the way however of switching over permanently and Aleksey Bragin has managed to resolve some of them.</description>
    </item>
    
    <item>
      <title>Newsletter 57</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-57/</link>
      <pubDate>Thu, 30 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-57/</guid>
      <description>VBox Video Driver  A while back the VBox video driver started working in ReactOS, which meant people using VirtualBox could now get hardware acceleration for graphics. To make the driver usable, Timo Kreuzer fixed two things in the Win32 subsystem. While the driver ran before the fixes, its functionality was somewhat crippled and drawing often resulted in problems. The first fix was for the mouse pointer, or more specifically drawing the mouse pointer moving across the screen.</description>
    </item>
    
    <item>
      <title>Newsletter 56</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-56/</link>
      <pubDate>Thu, 09 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-56/</guid>
      <description>USB  USB support has an odd history in ReactOS. The original effort involved porting the Cromwell USB stack from Linux, which Aleksey Bragin spent awhile trying to get working. This was eventually abandoned for another third party project, an USB stack developed for NT4 by a programmer in China. This stack however was incomplete and rather buggy and the original author no longer maintained it so Aleksey spent some time fixing it up, to an extent.</description>
    </item>
    
    <item>
      <title>Newsletter 55</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-55/</link>
      <pubDate>Mon, 16 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-55/</guid>
      <description>Font Engine  There is a difference between functional correctness and implementation correctness, a distinction one always has to keep in mind when saying something works in ReactOS. In the case of text rendering, while the output may for the most part look correct, the underlying implementation is nothing like how it should be. The abbreviated function call chain for displaying text is TextOutA/W, NtGdiExtTextOutW, and GreExtTextOutW. There are a few variations but the above provides a general idea of the path down to the Gre function.</description>
    </item>
    
    <item>
      <title>Newsletter 54</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-54/</link>
      <pubDate>Wed, 04 Mar 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-54/</guid>
      <description>Memory Usage  The minimum required memory for ReactOS has been creeping up for some time now, mainly due to the installer. In general, the developers knew that the memory required by ROS after the install was nowhere as high as during the install. Most assumed there was some kind of memory leakage happening, whether it be in the installer or even in the memory manager. It was an issue many people wanted addressed but it wasn&amp;#39;t until Alex Ionescu took a look that the problem was resolved.</description>
    </item>
    
    <item>
      <title>Newsletter 53</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-53/</link>
      <pubDate>Mon, 16 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-53/</guid>
      <description>ReactOS 0.3.8  Version 0.3.8 was released on Feburary 4th. The developers actually did a rush job, trying to get it ready in time for Andrew Greenwood to burn all the CDs they would be taking to FOSDEM. 0.3.8 continues the emphasis on stability and usability, but ultimately the OS still has a long way to go before these goals are achieved. FOSDEM  Several developers were present at the FOSDEM convention representing the project.</description>
    </item>
    
    <item>
      <title>Newsletter 52</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-52/</link>
      <pubDate>Mon, 02 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-52/</guid>
      <description>More Win32 Work  Timo Kreuzer continues his efforts to make the Win32 subsystem more correct, recently working on the functions SetWindowExtEx and SetViewpointExtEx. The first step was moving it out of win32k, where the operations were originally being carried out, and into gdi32, where they should be carried out. Jim Tabor had code in place which implemented them, but they needed some fixing. While not yet complete, Timo has corrected some of the errors.</description>
    </item>
    
    <item>
      <title>Newsletter 51</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-51/</link>
      <pubDate>Mon, 12 Jan 2009 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-51/</guid>
      <description>Drawing Bugs  Two issues were recently fixed that caused some problems in Firefox 2. The first was the page loaded would wash out after about 60 seconds of inactivity. The problem was in NtGdiGetDIBitsInternal, where the function was using the device context&#39;s palette instead of the bitmap&#39;s. The second problem involves the logos and images on Firefox&#39;s Google homepage being blacked out or completely missing entirely. This problem is slightly more complex as it involved the three types of &#34;</description>
    </item>
    
    <item>
      <title>Newsletter 50</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-50/</link>
      <pubDate>Sat, 20 Dec 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-50/</guid>
      <description>The Perils of PSEH2  While KJK did get PSEH2 out in record time, this meant that it was relatively untested when he committed it and developers began using it. Currently PSEH seems to be corrupting data when exceptions get thrown, which then cascades down and causes functions to assert and crash, something that it was supposed to prevent. Michael Martin&amp;#39;s theory about what is happening is that PSEH is clobbering local variables that are being held in registers, though KJK attributes it to an issue of not using setjmp.</description>
    </item>
    
    <item>
      <title>Newsletter 49</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-49/</link>
      <pubDate>Mon, 17 Nov 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-49/</guid>
      <description>Network Configuration  Johannes Anderwald has been working to fix a persistent bug in the network settings that resulted after he reimplemented the network configuration and settings dialog in netcfgx.dll using COM interfaces. Johannes also had to implement the COM interfaces, since they didn&#39;t exist before, and they are now in netshell.dll. Unfortunately, it seems that the dhcpclient was storing settings in the wrong registry key, which resulted in failure to retrieve DNS information and crashing of applications that relied on such information.</description>
    </item>
    
    <item>
      <title>Newsletter 48</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-48/</link>
      <pubDate>Sat, 25 Oct 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-48/</guid>
      <description>General Developments  The release was delayed to take care of a series of regressions. That and I was busy so the changelog itself wasn&amp;#39;t ready either. Anyways, every time a branch is created, Colin Finck, the release engineer, puts up a build and our team of testers run it through its paces and see if any applications that worked in the past got broken. If that happens, effort is made to fix the regression.</description>
    </item>
    
    <item>
      <title>Newsletter 47</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-47/</link>
      <pubDate>Sun, 28 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-47/</guid>
      <description>General Developments  The developers have been quite busy over the past month, each chugging away at their respective spots. Cameron Gutman continues filling in holes in our networking code, while Ged Murphy is putting together headers for the user mode side of networking. Samuel Serapion and Timo Kreuzer are still working on the x64 branch, fixing compile errors and warnings as they go. We&#39;ve also had a few discussions with the mingw64 people about what&#39;s missing on both ends to get ReactOS to run as a proper x64 OS.</description>
    </item>
    
    <item>
      <title>Newsletter 46</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-46/</link>
      <pubDate>Wed, 20 Aug 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-46/</guid>
      <description>Shellfolder Extensions  All of the special folders such as control panel, printer folder, and administrative tools are actually shellfolder extensions that the Explorer shell implements using IShellFolder. Johannes Anderwald has been implementing those still missing in ReactOS as well as extending and fixing others. Two new ones are the Font folder and the Administrative Tools folder. Johannes also implemented the dialog for formating drives, but this obviously isn&amp;#39;t functional.  The Recycle Bin was also fixed with help from Herv&amp;eacute; Poussineau, as previously several issues in Trash_CanTrashFile prevented files from being moved there.</description>
    </item>
    
    <item>
      <title>Newsletter 45</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-45/</link>
      <pubDate>Mon, 11 Aug 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-45/</guid>
      <description>LinuxWorld Report  For the past week, Art Yerkes has been representing ReactOS at the Linux World Convention in California.&amp;nbsp; He was unfortunately the only ReactOS developer or community member that could make it, but things seem to have turned out well.&amp;nbsp; In the process of preparing for the convention, Art stumbled over an issue with drive letters that I will cover later.&amp;nbsp; This forced him to rely on running ReactOS in QEMU, which actually turned out nicely.</description>
    </item>
    
    <item>
      <title>Newsletter 44</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-44/</link>
      <pubDate>Wed, 06 Aug 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-44/</guid>
      <description>General Development  There was an interesting bug involving handle creation a while back. When creating the 4100th handle, the system would crash. This bug was exposed through VLC and was eventually fixed by Christoph von Wittich. The problem was the result of an incorrect calculation, where the code attempted to access an index higher than 4099 on the first table. Such values are out of bounds and are supposed to be found in the second table and higher.</description>
    </item>
    
    <item>
      <title>Newsletter 43</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-43/</link>
      <pubDate>Wed, 16 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-43/</guid>
      <description>0.3.5 Release  Obviously the release has gone out and we are receiving the usual reports of problems and successes. The biggest problem seems to be an issue people are having with Qemu on Vista, at least the Qemu version we prepackaged. This is not really a problem with ReactOS itself, but with the emulator software. For people who have encountered this, we suggest using the 0.9.0 builds instead of the 0.</description>
    </item>
    
    <item>
      <title>Newsletter 42</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-42/</link>
      <pubDate>Sat, 28 Jun 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-42/</guid>
      <description>Various Matters  The project&#39;s been dealing with some internal matters recently and this combined with my day job being at the same time the majority of developers are online means I wasn&#39;t fully up to date on development matters and was busy dealing with other matters. Due to various issues and my lack of time recently, it&#39;s taken this long to get one out. We did have a second person who volunteered to write something up and the basic information in this newsletter is from his draft.</description>
    </item>
    
    <item>
      <title>Newsletter 41</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-41/</link>
      <pubDate>Thu, 15 May 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-41/</guid>
      <description>Just a reminder that there really isn&amp;#39;t any set schedule for newsletters anymore. We (or at least I) publish whenever there&amp;#39;s something to report, and boy do we have a lot of ground to cover. The past few weeks have been very eventful. 0.3.5 and Development Focus  Amongst the developers, the joke was that Aleksey&amp;#39;s vacation delayed the release, so it was his fault that we&amp;#39;re behind. Now, it is Aleksey&amp;#39;s fault, but for a different reason.</description>
    </item>
    
    <item>
      <title>Newsletter 40</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-40/</link>
      <pubDate>Mon, 05 May 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-40/</guid>
      <description>Microsoft DirectX Runtime  First, let me state that legally, according to the whole Windows Genuine Advantage and EULA, you&amp;#39;re not supposed to install the MS DirectX runtime on nongenuine Windows systems. On the other hand, the runtimes that come with various games as a prerequisite to playing the game aren&amp;#39;t technically bound by the WGA. That aside, the MS DirectX runtime now loads on ReactOS. To get DX on, you need to manually copy the following files: dxg.</description>
    </item>
    
    <item>
      <title>Newsletter 39</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-39/</link>
      <pubDate>Mon, 31 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-39/</guid>
      <description>General Status  We&amp;#39;re currently in the middle of compiling the changelog, but that doesn&amp;#39;t necessarily mean we&amp;#39;re ready for release.  The keyboard/mouse problem has slowly been worked out and according to Colin Finck it is now fixed. If you still encounter problems, complain to him, not me.&amp;nbsp; The issue with the keyboard not responding during language selection should now be gone and was due to the keyboard driver not loading properly.</description>
    </item>
    
    <item>
      <title>Newsletter 38</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-38/</link>
      <pubDate>Sat, 01 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-38/</guid>
      <description>Server maintenance   Recent server maintenance caused outages of the web and SVN servers. The ordeal lasted a few hours for some users, which could not access the project web page, SVN servers, or send mail to the mailing lists. If you sent an email to our mailing list during the outage your mail could have bounced, or have been lost. Don&amp;#39;t believe the conspiracy theories, it was just a DNS change.</description>
    </item>
    
    <item>
      <title>Newsletter 37</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-37/</link>
      <pubDate>Thu, 07 Feb 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-37/</guid>
      <description>0.3.4 Release  0.3.4 was released a few weeks back. While it has seen some major improvements, the mouse/keyboard bug wasn&amp;#39;t completely squashed in the release. However, it has been fixed in trunk by Aleksey, so all of you can stop complaining about it. On the other hand, people are reporting some major speed increases with this release. Thomas Bluemel&amp;#39;s work on the desktop heap and Jim Tabor&amp;#39;s work in deferring switchs between user and kernel mode seem to be paying off.</description>
    </item>
    
    <item>
      <title>Newsletter 36</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-36/</link>
      <pubDate>Tue, 08 Jan 2008 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-36/</guid>
      <description>General Developments  Aleksey and Herve have been working on the PnP problem, which many people are experiencing through the unresponsive mouse or keyboard. At least some of the problem&amp;#39;s been fixed, since people seem to have better success. In an attempt to squash the rest of the bug, Aleksey is updating the Remote Procedure Call code in ROS. Also, a working RPC would also allow WIDL, our substitute for MIDL (Microsoft Interface Definition Language), a method for software components written in different programming languages to communicate, to finally work.</description>
    </item>
    
    <item>
      <title>Newsletter 35</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-35/</link>
      <pubDate>Sun, 16 Dec 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-35/</guid>
      <description>Release Time  According to our project manager the change log should be finished by the end of December and if all remaining blockers are fixed release will occur sometime in January. ReactOS 0.3.4 promises to improve on 0.3.3 by working on more hardware, running even more applications, being faster and more stable than ever before. Even so many of the same old restrictions apply. We thank everyone who has helped make this release possible.</description>
    </item>
    
    <item>
      <title>Newsletter 34</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-34/</link>
      <pubDate>Mon, 19 Nov 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-34/</guid>
      <description>A rare joint newsletter between Samuel and I. General Changes  Some people have already noticed the inclusion of a new remote desktop utility, mstsc.exe, by Ged. Some asked why include this new tool when there is already such a client in SVN, albeit incomplete. The reasoning is simple. The author of the old client has been gone a while and Ged is not familiar with his code, so he chose to use something else.</description>
    </item>
    
    <item>
      <title>Newsletter 33</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-33/</link>
      <pubDate>Mon, 22 Oct 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-33/</guid>
      <description>Les Trophees du Libre  Les Trophees du Libre is a contest for free software, divided into six categories. ReactOS has entered the contest, in the science category. At first glance that might seem odd, but LinuxBIOS is also in that category. However, it&#39;s not LinuxBIOS we should be worried about. The competition from the other projects is going to be rough. We&#39;re facing mathematical libraries, pattern recognition, even bioinformatics. Still, with a grand prize of 3000 euros, it&#39;s definitely worth a shot.</description>
    </item>
    
    <item>
      <title>Newsletter 32</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-32/</link>
      <pubDate>Sun, 23 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-32/</guid>
      <description>ReactOS 0.3.3  Recently we released 0.3.3. We thank all the developers, testers, translators and everyone else who helped make it possible. The official release announcement by our project coordinator is here. The changelog can be found here, new screenshots are also available here. You can download your copy in the download page. Rbuild Improvements  Herve has been working recently on several rbuild improvements. The focuses of these is correctly separate and represent files using only a single scheme, improving flexibility and speed.</description>
    </item>
    
    <item>
      <title>Newsletter 31</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-31/</link>
      <pubDate>Sun, 02 Sep 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-31/</guid>
      <description>This newsletter is late because I ran into a permissions conflict with RosCMS. Others who have also run into it, frik is fixing it tomorrow.  Win32k Rewrite   Samuel mentioned this last time and I spoke with the developers responsible to get more details. Jim Tabor, Timo Kreuzer, and Magnus Olsen have been working extensively to redo the win32k subsystem. The biggest thing is duplicating the behavior of Windows&amp;#39; win32k.</description>
    </item>
    
    <item>
      <title>Newsletter 30</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-30/</link>
      <pubDate>Tue, 21 Aug 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-30/</guid>
      <description>Compilation fixes for MacOS X  Recently some developers have managed to compile ReactOS in OS X. So if you have built mingw32 for your mac and would like to build ReactOS in your mac you can. The primary difficulties lay in some wchar defines and iswdigit function and where fixed relatively easily. Win32k  The all important graphical subsystem continues its march to becoming the fully featured, safe and performing beast it should be.</description>
    </item>
    
    <item>
      <title>Newsletter 28</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-28/</link>
      <pubDate>Sun, 22 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-28/</guid>
      <description>Release time The long awaited 0.3.3 release is branched; the usual preparations for releases are under way. You should already know we skipped a version number and that this release is primarily bug fixes from the massive kernel rewrites that have been taking place. Stability being the primary motivation of this release, I can safely say this is a big improvement from the 0.3.1 release. The outlook looks bright on future releases, ever closer to the 0.</description>
    </item>
    
    <item>
      <title>Newsletter 29</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-29/</link>
      <pubDate>Sat, 21 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-29/</guid>
      <description>ReactOS 0.3.3 RC1 The release candidate was more or less a success, far more than what many of us expected. When bug reports started coming in from people running it on real hardware, several of us, including myself, were quite surprised. Having a stabilized kernel definitely helps. The RC was released for several reasons. First, ReactOS suddenly got a surge of attention over the past two weeks, resulting in people going and downloading our latest release.</description>
    </item>
    
    <item>
      <title>Newsletter 27</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-27/</link>
      <pubDate>Wed, 04 Jul 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-27/</guid>
      <description>Bug Hunt  The past few weeks have seen quite a lot of activity.&amp;nbsp; At least six major blocker bugs were dealt with, ranging from the network issue to various bugs in the command line console.&amp;nbsp; The pre VMware Workstation 6 Display Driver also now installs and works, which opens up some interesting possibilities.&amp;nbsp; Specifically, on VMware Workstation, the driver allows the use of DirectX or ReactX.&amp;nbsp; Which means Magnus Olsen&#39;s work on ReactX can actually be demo&#39;ed on Workstation, to an extent.</description>
    </item>
    
    <item>
      <title>Newsletter 26</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-26/</link>
      <pubDate>Mon, 11 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-26/</guid>
      <description>Forget 0.3.2  We promised a release period of two months, but all the kinks are not out yet. More than 2 months have passed and project leaders have decided that there are already enough changes in trunk to call it 0.3.3, the next release. This is a sign that development, although a bit hard to manage, is moving at faster rates. As development approaches 0.4.0 goals we would see increasing functionality and stability, as well as keeping in line with the best practices in software development, testing and compatibility.</description>
    </item>
    
    <item>
      <title>Newsletter 25</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-25/</link>
      <pubDate>Wed, 06 Jun 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-25/</guid>
      <description>In theory, I shouldn&#39;t be writing this edition. In reality, I got tired of waiting for Samuel to get this out. Thank You Alex For those that don&#39;t know, Alex Ionescu, the kernel coordinator, has resigned.&amp;nbsp; Alex first joined the project in 2004, around the 0.2.2 release.&amp;nbsp; Since then, he&#39;s been at the center of quite a few squabbles about how to code the kernel.&amp;nbsp; However, Alex has also been responsible for completely rewriting the kernel almost from the ground up.</description>
    </item>
    
    <item>
      <title>Newsletter 24</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-24/</link>
      <pubDate>Sun, 20 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-24/</guid>
      <description>When exam time comes, my priorities shift to real life obviously.&amp;nbsp; As such, the newsletter is a week late.&amp;nbsp; Whether the next newsletter is a week away or two will be up to Samuel when he gets around to it. Release Plans When the new release cycle was announced, the idea was that releases would happen every two months. This was a theoretical timeline that was dependent on several factors. First was the state of trunk.</description>
    </item>
    
    <item>
      <title>Newsletter 23</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-23/</link>
      <pubDate>Tue, 01 May 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-23/</guid>
      <description>Just to make it clear, while we aim for a biweekly newsletter, we only aim for it to be up around Sunday. It can easily be delayed if there isn&#39;t enough to talk about. The Road to 0.3.2 For those of you who don&#39;t follow the ReactOS scene closely it may be hard to know what exactly is happening in terms of development progress. The technical nature of some improvements also proves confusing to most people.</description>
    </item>
    
    <item>
      <title>Newsletter 22</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-22/</link>
      <pubDate>Sun, 15 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-22/</guid>
      <description>A New Volume When Samuel took over the newsletter, there was no guideline as to what constituted a Volume.&amp;nbsp; After talking to him, we decided to mark Volumes by year.&amp;nbsp; This means that Volume 1 had nine issues from 2005, Volume 2 had five issues from 2006, and Volume 3 has eight issues and counting in 2007.&amp;nbsp; And now we continue the biweekly rotation of who writes the meat of the article.</description>
    </item>
    
    <item>
      <title>Newsletter 21</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-21/</link>
      <pubDate>Mon, 02 Apr 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-21/</guid>
      <description>Another newsletter  I am glad I am able to bring you the latest news about ReactOS through this newsletter. It is the purpose of this newsletter to inform everyone of the recent work and notable highlights of this great project. It is my hope that you will find it useful and informative. (Insert license agreement indicating no particular usefulness, assorted legal wording and notices here... Just kidding!) Project News   New storage stack based on NT4-DDK examples implemented in trunk, fixes booting on VmWare and several other nasty bugs.</description>
    </item>
    
    <item>
      <title>Newsletter 20</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-20/</link>
      <pubDate>Sun, 18 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-20/</guid>
      <description>A Third Introduction Good day to all. The name&#39;s Z98 and I&#39;m one of two release managers for ReactOS. The source files and QEMU images were generated by me, so if there are any mistakes, you know who to complain to. Today I wrote most of the newsletter and I will be helping samwise52 in the future.
Reactions to 0.3.1 Reactions have varied in regard to 0.3.1, though one response was consistent.</description>
    </item>
    
    <item>
      <title>Newsletter 19</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-19/</link>
      <pubDate>Mon, 12 Mar 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-19/</guid>
      <description>0.3.1 Released! After months of discussions, testing and of course mountains of code, it&amp;rsquo;s finally here! The official release announcement was made by our project coordinator. This release has many deep down changes that may not be comprehensible to most users, but most users will in fact notice improved stability and speed. The changelog will tell you about these changes in technical terms, but the best testimony would be your own tests.</description>
    </item>
    
    <item>
      <title>Newsletter 18</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-18/</link>
      <pubDate>Wed, 28 Feb 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-18/</guid>
      <description>Opening Words Here is another informative newsletter for your enjoyment. You may have recently noticed last issue, that some of our developers were part of community conferences and events. It&amp;rsquo;s all part of new PR efforts to get ReactOS out there, in front of serious developers and community leaders. To raise awareness of how much ReactOS has advanced and it&amp;rsquo;s vast potential.
I&amp;rsquo;m kind of wary of this issue, I&amp;rsquo;ve been talking about 0.</description>
    </item>
    
    <item>
      <title>Newsletter 17</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-17/</link>
      <pubDate>Mon, 12 Feb 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-17/</guid>
      <description>Busy Times It&#39;s been a hectic 3 weeks, yes I am 1 week overdue. I&#39;ve been real busy with school and personal stuff, but I haven&#39;t been the only one thats been busy. It seems in my absence that 0.3.1 is finally shaping up. In this issue I will expand on the developments that have occurred not only in the main development branch (trunk), but also in the &amp;quot;stable&amp;quot; release branch for 0.</description>
    </item>
    
    <item>
      <title>Newsletter 16</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-16/</link>
      <pubDate>Thu, 18 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-16/</guid>
      <description>Another 2 weeks without 0.3.1 I know you&#39;ve been waiting for it(I sure have), but you certainly want a release that will boot. ReactOS will still be alpha, unstable and not recommended for everyday use. If you&#39;re really hardcore you&#39;ll try out the SVN versions. I can say that 0.3.1 will be a VERY significant improvement from 0.3.0, when we can finally get it to run on your PC.  Also I would like to remind everyone(just in case you missed the big fundraising bar at the top of every reactos.</description>
    </item>
    
    <item>
      <title>Newsletter 15</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-15/</link>
      <pubDate>Sun, 07 Jan 2007 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-15/</guid>
      <description>On the status of 0.3.1 Many of you have asked about 0.3.1 since it was clearly promised for the time frame of late December-early January. There have been many queries about it in the chat rooms and forums. Well, the problem is actually rather simple. The developers have decided that releases should be made every month, or at an appropriate time where in trunk or a designated branch is reasonably usable and showcases the progress of the ReactOS project.</description>
    </item>
    
    <item>
      <title>Newsletter 14</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-14/</link>
      <pubDate>Thu, 28 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-14/</guid>
      <description>Another Introduction  Hello, my name is Samuel Serapi&amp;oacute;n, IRC nick: encoded. I Hail from San Juan, Puerto Rico, a 20 year old computer engineering student, I will be your ReactOS informant today. I have great hopes for this project, and this is the small part I do to help it. What will YOU do to help ReactOS!? Website Outage  The day was December 14, 2006. A day which will live in infamy, well maybe not that much.</description>
    </item>
    
    <item>
      <title>Newsletter 13</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-13/</link>
      <pubDate>Wed, 13 Dec 2006 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-13/</guid>
      <description>I&#39;m the new guy(s) Yup, that&#39;s right, we&#39;re the new newsletter writers (those two words should never be used in combination - I promise never to do it again). We fought off a crowd of people breaking their necks to apply, and finally, we&#39;re here. So. Who are we? I am Dana Burkart, I will do most of the writing, and my associate - Samuel Serapion - will be providing most of the information.</description>
    </item>
    
    <item>
      <title>Newsletter 12</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-12/</link>
      <pubDate>Sun, 19 Nov 2006 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-12/</guid>
      <description>Time to get this Newsletter Back on Track A newsletter author, a new start. No, I am not the new newsletter author, we are still searching for one. Please read the related news entry for more detailed information.
If you would like to be the ReactOS newsletter author, please send an email to &amp;quot;ros-dev&amp;quot; developer mailing list (don&#39;t forget to subscribe), explaining why you think you would be a good newsletter author.</description>
    </item>
    
    <item>
      <title>Newsletter 11</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-11/</link>
      <pubDate>Fri, 10 Feb 2006 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-11/</guid>
      <description>ReactOS Weekly Newsletter Issue 11, &#34;Not dead just yet&#34; Not dead just yet! Whew. Now that Real Life has for now finished kicking me in the gonads for the time being, it&#39;s time to let you guys, the End Users, know what&#39;s actually happening in the ReactOS Project. Issue II I could have sworn went up, but either it got deleted, or I missed a button.
Now, first things, first. At the top of Reactos.</description>
    </item>
    
    <item>
      <title>Newsletter 10</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-10/</link>
      <pubDate>Mon, 09 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-10/</guid>
      <description>Time to get this Newsletter Back on Track A new year, a new start, I always say. Unfortunately, I was a little bit busier over the holiday period than I had anticipated, but now that I&#39;m back doing early shifts, instead of the late ones I was being handed, I will have enough time set aside to continue.
So, I&#39;ll start as I mean to go on... by Compiling! Yep, ReactOS&#39; Source Code may be all-singing, all-dancing, bu without it being compiled, all it does it look like a pretty collection of ASCII Codes.</description>
    </item>
    
    <item>
      <title>Newsletter Status</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-status/</link>
      <pubDate>Fri, 06 Jan 2006 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-status/</guid>
      <description>Hi Folks, TwoTailedFox here, just giving you guys the rundown on what&#39;s happenning with the Newsletter.
Unfortunately, I was busier than I&#39;d intended to be over Christmas and New Years. Being given lots of long shifts bunched together is a sure-fire way for me to feel very, very tired.
Newsletter contents for Issue 10 have been finalised, and I&#39;ve jotted down every relevent SVN update since the 13th of December. All that needs to be done is add lots of pretty formatting, and pray it&#39;s flawless first time around.</description>
    </item>
    
    <item>
      <title>Newsletter 9</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-9/</link>
      <pubDate>Tue, 20 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-9/</guid>
      <description>Issue 9 of the Newsletter has landed There are very few things that irritate me. Windows XP playing havock with my mouse cursor ranks among them. Thus, a reformat and reload ensues. And to top it all off, I have a PSU that&#39;s as dodgy as an SCO-Endorsed Lawsuit. For some strange reason, one of my Hard Drives will have its power drop out, which causes my drive to spin down, that acts like a domino toppling, and causes my system to hang.</description>
    </item>
    
    <item>
      <title>Newsletter 8</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-8/</link>
      <pubDate>Mon, 12 Dec 2005 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-8/</guid>
      <description>Welcome To Reality Welcome to the ReactOS Weekly Newsletter, Issue 8, where there are three kinds of people, none of them particularly effective at writing a newsletter today.
The Delay: Excuses Inbound Unfortunately, Issue 8 was delayed last week, because Mrs. Flu decided to bed me over, and screw me crosseyed, leaving me very ill, and making my body wish it had a built-in thermostat. Anyway, it&#39;s better to have a newsletter late, than not at all, so let&#39;s just jump straight to it.</description>
    </item>
    
    <item>
      <title>Newsletter 7</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-7/</link>
      <pubDate>Sun, 27 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-7/</guid>
      <description>Welcome to Issue 7 of the ReactOS Weekly Newsletter, as persistant as a Jehovah&#39;s Witness. This week, I&#39;ll be taking a look at the NDK used by the ReactOS Developers, covering WINE 0.9.2, and detailing the latest SVN activity.
NDK: What it does, and why it&#39;s needed &amp;quot;What is the NDK designed to do?&amp;quot;, I hear you ask. Well, first off, a little bit of it&#39;s history. The NDK stands for Native Development Kit, and was the brainchild of Alex Ionescu, as a way of allowing Windows and ReactOS developers alike to have access to a wealth of undocumented kernel and native structures and function prototype.</description>
    </item>
    
    <item>
      <title>Newsletter 6</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-6/</link>
      <pubDate>Sun, 20 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-6/</guid>
      <description>Welcome to Issue 6, the Issue that confirms we&#39;ve beaten Splash. And to celebrate, this is going to be a Big issue. First off, We&#39;ll be taking a look at where ReactOS is headed, other than for x86, covering the Xbox, Xen, and PowerPC ports.
And we&#39;ve also got out first vic.. I mean volunteer for our very first Interview. .. Now there&#39;s no excuse for the rest of the Developers to not volunteer!</description>
    </item>
    
    <item>
      <title>Newsletter 5</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-5/</link>
      <pubDate>Sun, 13 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-5/</guid>
      <description>ReactOS Weekly Newsletter Volume 1, Issue 5 The Number keeps creeping up, and I believe, with this Issue, the ReactOS Weekly Newsletter equals the amount of editions Splash, the former ReactOS Newsletter, released
Freeloader: What is it? Freeloader (abbreviated freeldr [Why is abbreviated such a long word? -Ed.]), is the ReactOS Bootloader, licensed under the GPL.
What does it do?  It parses the ReactOS registry, and examines particular keys for certain values to act upon.</description>
    </item>
    
    <item>
      <title>Newsletter 4</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-4/</link>
      <pubDate>Mon, 07 Nov 2005 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-4/</guid>
      <description>ReactOS Weekly Newsletter Volume 1, Issue 4 Issue 4. A full month of Newsletters, and we&#39;re only just beginning.
ReactOS and other Software I said I&#39;d do this last week, and I&#39;m not one to cut back on a promise.
So, to clarify, ReactOS is an Operating System. What is an Operating System supposed to include? Well, there are several mentalities.
 The Linux Distro Approach. All the software you&#39;d ever need on one DVD, and then some.</description>
    </item>
    
    <item>
      <title>Newsletter 3</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-3/</link>
      <pubDate>Mon, 31 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-3/</guid>
      <description>Another Week, Another Newsletter, a lot of news stuffed into a single issue, like an 8-course Barium meal.
A Request! I actually got a request for some content for the newsletter. And since I like the look of them I&#39;ll have a look at both subjects. Let us begin.
New Voting System It was decided a while back that the voting procedures needed to be changed, after a slight mis-hap on IRC, and some questioning the validity of a vote conducted there, as opposed to the Ros-Dev Mailing List.</description>
    </item>
    
    <item>
      <title>Newsletter 2</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-2/</link>
      <pubDate>Sun, 23 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-2/</guid>
      <description>Well, would you look at that. Another Sunday. another Newsletter. And Boy has this week been interesting.
The ReactOS Constitution Found here, the new ReactOS Constitution is designed to clarify many of the things we all took for granted, such as who can do what on the project, and to elaborate on how Voting Prodecures should be followed. In addition, it also lays out the responsibilities of all the members of the Board of Directors of the ReactOS Foundation.</description>
    </item>
    
    <item>
      <title>Newsletter 1</title>
      <link>https://costanzaltavilla.github.io/blogs/newsletter-1/</link>
      <pubDate>Sun, 16 Oct 2005 00:00:00 +0000</pubDate>
      
      <guid>https://costanzaltavilla.github.io/blogs/newsletter-1/</guid>
      <description>The Big Intro Ah, Hello There! Allow me introduce myself. My name is Stuart Robbins, and my job on Reactos.org, is to write a newsletter, each week, giving you, the End User, and even Casual Developer, the run-down on what is going on behind the scenes, with the ReactOS Open-Source Operating System.
The ReactOS Content Management System First off, is the new ReactOS.org Content Management System, abbreviated RosCMS. It blends in nicely with the ReactOS Wiki (Itself using MediaWiki), while also providing space for new Website Articles (Much like this one), as well as providing small subsections, to announce news, like 0.</description>
    </item>
    
  </channel>
</rss>